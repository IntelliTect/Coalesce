on:
  workflow_call:
    inputs:
      prereleaseSlug:
        required: false
        type: string

jobs:
  npm:
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v5

      - uses: actions/setup-node@v6
        with:
          node-version: 24.x
          registry-url: "https://registry.npmjs.org"

      - name: Update npm
        run: npm install -g npm@latest

      - name: npm publish coalesce-vue
        run: npm publish ./coalesce-vue/*.tgz --tag ${{ inputs.prereleaseSlug || 'latest' }} --access public

      - name: npm publish coalesce-mcp
        run: npm publish ./coalesce-mcp/*.tgz --tag ${{ inputs.prereleaseSlug || 'latest' }} --access public

      - name: npm publish coalesce-vue-vuetify
        run: for f in ./coalesce-vue-vuetify*/*.tgz; do npm publish $f --tag ${{ inputs.prereleaseSlug || 'latest' }} --access public; done

  nuget:
    runs-on: ubuntu-latest

    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v5

      - name: dotnet nuget push
        run: dotnet nuget push "**/*.nupkg" -s https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_TOKEN }}

  docs:
    runs-on: ubuntu-latest

    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v5

      - name: Deploy to Azure Static Web App (Production)
        if: ${{ !inputs.prereleaseSlug }}
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "docs"
          output_location: ""
          skip_app_build: true

      - name: Deploy to Azure Static Web App (Preview)
        if: ${{ inputs.prereleaseSlug }}
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "docs"
          output_location: ""
          skip_app_build: true
          deployment_environment: ${{ inputs.prereleaseSlug }}
