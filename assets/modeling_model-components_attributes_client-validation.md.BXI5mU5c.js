import{_ as t,c as p,I as l,w as r,a7 as c,l as s,a,D as o,o as D}from"./chunks/framework.BkavzUpE.js";const V=JSON.parse('{"title":"[ClientValidation]","description":"","frontmatter":{},"headers":[],"relativePath":"modeling/model-components/attributes/client-validation.md","filePath":"modeling/model-components/attributes/client-validation.md"}'),i={name:"modeling/model-components/attributes/client-validation.md"},y=c(`<h1 id="clientvalidation" tabindex="-1">[ClientValidation] <a class="header-anchor" href="#clientvalidation" aria-label="Permalink to &quot;[ClientValidation]&quot;">​</a></h1><p><code>IntelliTect.Coalesce.DataAnnotations.ClientValidationAttribute</code></p><p>The <code>ClientValidation</code> attribute is used to control the behavior of client-side model validation and to add additional client-only validation parameters. Database validation is available via standard <code>System.ComponentModel.DataAnnotations</code> annotations.</p><p>These propagate to the client as validations in TypeScript via generated <a href="/Coalesce/stacks/vue/layers/metadata.html">Metadata</a> and <a href="/Coalesce/stacks/vue/layers/viewmodels.html">ViewModel rules</a>. Any failing validation rules prevent saves from going to the server.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>This attribute controls client-side validation only. To perform server-side validation, create a custom <a href="/Coalesce/modeling/model-components/behaviors.html">Behaviors class</a> for your types and/or place C# validation attributes on your models. <a href="/Coalesce/topics/security.html#server-side-data-validation">Read More</a>.</p></div><h2 id="example-usage" tabindex="-1">Example Usage <a class="header-anchor" href="#example-usage" aria-label="Permalink to &quot;Example Usage&quot;">​</a></h2><div class="language-c#"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#569CD6;">public</span><span style="color:#569CD6;"> class</span><span style="color:#4EC9B0;"> Person</span></span>
<span class="line"><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#569CD6;">    public</span><span style="color:#569CD6;"> int</span><span style="color:#9CDCFE;"> PersonId</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#4EC9B0;">ClientValidation</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">IsRequired</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">true</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">AllowSave</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">true</span><span style="color:#D4D4D4;">)]</span></span>
<span class="line"><span style="color:#569CD6;">    public</span><span style="color:#569CD6;"> string</span><span style="color:#9CDCFE;"> FirstName</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#4EC9B0;">ClientValidation</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">IsRequired</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">true</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">AllowSave</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">false</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">MinLength</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">MaxLength</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">100</span><span style="color:#D4D4D4;">)]</span></span>
<span class="line"><span style="color:#569CD6;">    public</span><span style="color:#569CD6;"> string</span><span style="color:#9CDCFE;"> LastName</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2>`,8),C=s("p",null,"Set an error message to be used if any client validations fail",-1),d=s("h3",{id:"validation-rule-properties",tabindex:"-1"},[a("Validation Rule Properties "),s("a",{class:"header-anchor",href:"#validation-rule-properties","aria-label":'Permalink to "Validation Rule Properties"'},"​")],-1),u=s("p",null,[a("In addition to the following properties, you also customize validation on a per-instance basis of the "),s("a",{href:"/Coalesce/stacks/vue/layers/viewmodels.html#viewmodels"},"ViewModels"),a(" using the "),s("a",{href:"/Coalesce/stacks/vue/layers/viewmodels.html#rules-validation"},"Rules/Validation"),a(" methods.")],-1),h=s("div",{class:"language-c#"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"c#"),s("pre",{class:"shiki dark-plus vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#569CD6"}},"public"),s("span",{style:{color:"#569CD6"}}," bool"),s("span",{style:{color:"#9CDCFE"}}," IsRequired"),s("span",{style:{color:"#D4D4D4"}}," { "),s("span",{style:{color:"#9CDCFE"}},"get"),s("span",{style:{color:"#D4D4D4"}},"; "),s("span",{style:{color:"#9CDCFE"}},"set"),s("span",{style:{color:"#D4D4D4"}},"; }")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6"}},"public"),s("span",{style:{color:"#569CD6"}}," double"),s("span",{style:{color:"#9CDCFE"}}," MinValue"),s("span",{style:{color:"#D4D4D4"}}," { "),s("span",{style:{color:"#9CDCFE"}},"get"),s("span",{style:{color:"#D4D4D4"}},"; "),s("span",{style:{color:"#9CDCFE"}},"set"),s("span",{style:{color:"#D4D4D4"}},"; } = "),s("span",{style:{color:"#569CD6"}},"double"),s("span",{style:{color:"#D4D4D4"}},"."),s("span",{style:{color:"#9CDCFE"}},"MaxValue"),s("span",{style:{color:"#D4D4D4"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6"}},"public"),s("span",{style:{color:"#569CD6"}}," double"),s("span",{style:{color:"#9CDCFE"}}," MaxValue"),s("span",{style:{color:"#D4D4D4"}}," { "),s("span",{style:{color:"#9CDCFE"}},"get"),s("span",{style:{color:"#D4D4D4"}},"; "),s("span",{style:{color:"#9CDCFE"}},"set"),s("span",{style:{color:"#D4D4D4"}},"; } = "),s("span",{style:{color:"#569CD6"}},"double"),s("span",{style:{color:"#D4D4D4"}},"."),s("span",{style:{color:"#9CDCFE"}},"MinValue"),s("span",{style:{color:"#D4D4D4"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6"}},"public"),s("span",{style:{color:"#569CD6"}}," double"),s("span",{style:{color:"#9CDCFE"}}," MinLength"),s("span",{style:{color:"#D4D4D4"}}," { "),s("span",{style:{color:"#9CDCFE"}},"get"),s("span",{style:{color:"#D4D4D4"}},"; "),s("span",{style:{color:"#9CDCFE"}},"set"),s("span",{style:{color:"#D4D4D4"}},"; } = "),s("span",{style:{color:"#569CD6"}},"double"),s("span",{style:{color:"#D4D4D4"}},"."),s("span",{style:{color:"#9CDCFE"}},"MaxValue"),s("span",{style:{color:"#D4D4D4"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6"}},"public"),s("span",{style:{color:"#569CD6"}}," double"),s("span",{style:{color:"#9CDCFE"}}," MaxLength"),s("span",{style:{color:"#D4D4D4"}}," { "),s("span",{style:{color:"#9CDCFE"}},"get"),s("span",{style:{color:"#D4D4D4"}},"; "),s("span",{style:{color:"#9CDCFE"}},"set"),s("span",{style:{color:"#D4D4D4"}},"; } = "),s("span",{style:{color:"#569CD6"}},"double"),s("span",{style:{color:"#D4D4D4"}},"."),s("span",{style:{color:"#9CDCFE"}},"MinValue"),s("span",{style:{color:"#D4D4D4"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6"}},"public"),s("span",{style:{color:"#569CD6"}}," string"),s("span",{style:{color:"#9CDCFE"}}," Pattern"),s("span",{style:{color:"#D4D4D4"}}," { "),s("span",{style:{color:"#9CDCFE"}},"get"),s("span",{style:{color:"#D4D4D4"}},"; "),s("span",{style:{color:"#9CDCFE"}},"set"),s("span",{style:{color:"#D4D4D4"}},"; }")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6"}},"public"),s("span",{style:{color:"#569CD6"}}," bool"),s("span",{style:{color:"#9CDCFE"}}," IsEmail"),s("span",{style:{color:"#D4D4D4"}}," { "),s("span",{style:{color:"#9CDCFE"}},"get"),s("span",{style:{color:"#D4D4D4"}},"; "),s("span",{style:{color:"#9CDCFE"}},"set"),s("span",{style:{color:"#D4D4D4"}},"; }")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6"}},"public"),s("span",{style:{color:"#569CD6"}}," bool"),s("span",{style:{color:"#9CDCFE"}}," IsPhoneUs"),s("span",{style:{color:"#D4D4D4"}}," { "),s("span",{style:{color:"#9CDCFE"}},"get"),s("span",{style:{color:"#D4D4D4"}},"; "),s("span",{style:{color:"#9CDCFE"}},"set"),s("span",{style:{color:"#D4D4D4"}},"; }")])])])],-1);function m(b,v,E,g,F,_){const e=o("Prop"),n=o("CodeTabs");return D(),p("div",null,[y,l(e,{def:"public string ErrorMessage { get; set; }"}),C,d,l(n,null,{vue:r(()=>[u,h]),_:1})])}const x=t(i,[["render",m]]);export{V as __pageData,x as default};
