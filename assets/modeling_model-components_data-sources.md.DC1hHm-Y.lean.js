import{_ as p,c,I as a,w as l,a7 as n,l as e,a as s,D as r,o as i}from"./chunks/framework.BkavzUpE.js";const U=JSON.parse('{"title":"Data Sources","description":"","frontmatter":{},"headers":[],"relativePath":"modeling/model-components/data-sources.md","filePath":"modeling/model-components/data-sources.md"}'),d={name:"modeling/model-components/data-sources.md"},D=n("",12),y=e("p",null,[s("The "),e("a",{href:"/Coalesce/stacks/vue/layers/viewmodels.html#viewmodels"},"ViewModels"),s(" and "),e("a",{href:"/Coalesce/stacks/vue/layers/viewmodels.html#listviewmodels"},"ListViewModels"),s(" each have a property called "),e("code",null,"$dataSource"),s(". This property accepts an instance of a "),e("a",{href:"/Coalesce/stacks/vue/layers/models.html"},"DataSource"),s(" class generated in the "),e("a",{href:"/Coalesce/stacks/vue/layers/models.html"},"Model Layer"),s(".")],-1),u=e("div",{class:"language-ts"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"ts"),e("pre",{class:"shiki dark-plus vp-code"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#C586C0"}},"import"),e("span",{style:{color:"#D4D4D4"}}," { "),e("span",{style:{color:"#9CDCFE"}},"Person"),e("span",{style:{color:"#D4D4D4"}}," } "),e("span",{style:{color:"#C586C0"}},"from"),e("span",{style:{color:"#CE9178"}}," '@/models.g'")]),s(`
`),e("span",{class:"line"},[e("span",{style:{color:"#C586C0"}},"import"),e("span",{style:{color:"#D4D4D4"}}," { "),e("span",{style:{color:"#9CDCFE"}},"PersonViewModel"),e("span",{style:{color:"#D4D4D4"}},", "),e("span",{style:{color:"#9CDCFE"}},"PersonListViewModel"),e("span",{style:{color:"#D4D4D4"}}," } "),e("span",{style:{color:"#C586C0"}},"from"),e("span",{style:{color:"#CE9178"}}," '@/viewmodels.g'")]),s(`
`),e("span",{class:"line"}),s(`
`),e("span",{class:"line"},[e("span",{style:{color:"#569CD6"}},"var"),e("span",{style:{color:"#9CDCFE"}}," viewModel"),e("span",{style:{color:"#D4D4D4"}}," = "),e("span",{style:{color:"#569CD6"}},"new"),e("span",{style:{color:"#DCDCAA"}}," PersonViewModel"),e("span",{style:{color:"#D4D4D4"}},"();")]),s(`
`),e("span",{class:"line"},[e("span",{style:{color:"#9CDCFE"}},"viewModel"),e("span",{style:{color:"#D4D4D4"}},"."),e("span",{style:{color:"#9CDCFE"}},"$dataSource"),e("span",{style:{color:"#D4D4D4"}}," = "),e("span",{style:{color:"#569CD6"}},"new"),e("span",{style:{color:"#9CDCFE"}}," Person"),e("span",{style:{color:"#D4D4D4"}},"."),e("span",{style:{color:"#9CDCFE"}},"DataSources"),e("span",{style:{color:"#D4D4D4"}},"."),e("span",{style:{color:"#DCDCAA"}},"IncludeFamily"),e("span",{style:{color:"#D4D4D4"}},"();")]),s(`
`),e("span",{class:"line"},[e("span",{style:{color:"#9CDCFE"}},"viewModel"),e("span",{style:{color:"#D4D4D4"}},"."),e("span",{style:{color:"#DCDCAA"}},"$load"),e("span",{style:{color:"#D4D4D4"}},"("),e("span",{style:{color:"#B5CEA8"}},"1"),e("span",{style:{color:"#D4D4D4"}},");")]),s(`
`),e("span",{class:"line"}),s(`
`),e("span",{class:"line"},[e("span",{style:{color:"#569CD6"}},"var"),e("span",{style:{color:"#9CDCFE"}}," list"),e("span",{style:{color:"#D4D4D4"}}," = "),e("span",{style:{color:"#569CD6"}},"new"),e("span",{style:{color:"#DCDCAA"}}," PersonListViewModel"),e("span",{style:{color:"#D4D4D4"}},"();")]),s(`
`),e("span",{class:"line"},[e("span",{style:{color:"#9CDCFE"}},"list"),e("span",{style:{color:"#D4D4D4"}},"."),e("span",{style:{color:"#9CDCFE"}},"$dataSource"),e("span",{style:{color:"#D4D4D4"}}," = "),e("span",{style:{color:"#569CD6"}},"new"),e("span",{style:{color:"#9CDCFE"}}," Person"),e("span",{style:{color:"#D4D4D4"}},"."),e("span",{style:{color:"#9CDCFE"}},"DataSources"),e("span",{style:{color:"#D4D4D4"}},"."),e("span",{style:{color:"#DCDCAA"}},"NamesStartingWith"),e("span",{style:{color:"#D4D4D4"}},"();")]),s(`
`),e("span",{class:"line"},[e("span",{style:{color:"#9CDCFE"}},"list"),e("span",{style:{color:"#D4D4D4"}},"."),e("span",{style:{color:"#DCDCAA"}},"$load"),e("span",{style:{color:"#D4D4D4"}},"("),e("span",{style:{color:"#B5CEA8"}},"1"),e("span",{style:{color:"#D4D4D4"}},");")])])])],-1),h=n("",9),C=e("p",null,[s("To automatically reload a "),e("a",{href:"/Coalesce/stacks/vue/layers/viewmodels.html"},"ListViewModel"),s(" when data source parameters change, simply use the list's "),e("code",null,"$useAutoLoad"),s(" or "),e("code",null,"$startAutoLoad"),s(" function:")],-1),m=e("div",{class:"language-ts"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"ts"),e("pre",{class:"shiki dark-plus vp-code"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#C586C0"}},"import"),e("span",{style:{color:"#D4D4D4"}}," { "),e("span",{style:{color:"#9CDCFE"}},"Person"),e("span",{style:{color:"#D4D4D4"}}," } "),e("span",{style:{color:"#C586C0"}},"from"),e("span",{style:{color:"#CE9178"}}," '@/models.g'"),e("span",{style:{color:"#D4D4D4"}},";")]),s(`
`),e("span",{class:"line"},[e("span",{style:{color:"#C586C0"}},"import"),e("span",{style:{color:"#D4D4D4"}}," { "),e("span",{style:{color:"#9CDCFE"}},"PersonListViewModel"),e("span",{style:{color:"#D4D4D4"}}," } "),e("span",{style:{color:"#C586C0"}},"from"),e("span",{style:{color:"#CE9178"}}," '@/viewmodels.g'"),e("span",{style:{color:"#D4D4D4"}},";")]),s(`
`),e("span",{class:"line"}),s(`
`),e("span",{class:"line"},[e("span",{style:{color:"#569CD6"}},"const"),e("span",{style:{color:"#4FC1FF"}}," list"),e("span",{style:{color:"#D4D4D4"}}," = "),e("span",{style:{color:"#569CD6"}},"new"),e("span",{style:{color:"#9CDCFE"}}," PersonListViewModel"),e("span",{style:{color:"#D4D4D4"}},";")]),s(`
`),e("span",{class:"line"},[e("span",{style:{color:"#569CD6"}},"const"),e("span",{style:{color:"#4FC1FF"}}," dataSource"),e("span",{style:{color:"#D4D4D4"}}," = "),e("span",{style:{color:"#9CDCFE"}},"list"),e("span",{style:{color:"#D4D4D4"}},"."),e("span",{style:{color:"#9CDCFE"}},"$dataSource"),e("span",{style:{color:"#D4D4D4"}}," = "),e("span",{style:{color:"#569CD6"}},"new"),e("span",{style:{color:"#9CDCFE"}}," Person"),e("span",{style:{color:"#D4D4D4"}},"."),e("span",{style:{color:"#9CDCFE"}},"DataSources"),e("span",{style:{color:"#D4D4D4"}},"."),e("span",{style:{color:"#9CDCFE"}},"NamesStartingWith")]),s(`
`),e("span",{class:"line"},[e("span",{style:{color:"#9CDCFE"}},"list"),e("span",{style:{color:"#D4D4D4"}},"."),e("span",{style:{color:"#DCDCAA"}},"$useAutoLoad"),e("span",{style:{color:"#D4D4D4"}},"(); "),e("span",{style:{color:"#6A9955"}},"// When using options API, use $startAutoLoad(this) instead.")]),s(`
`),e("span",{class:"line"}),s(`
`),e("span",{class:"line"},[e("span",{style:{color:"#6A9955"}},"// Trigger a reload:")]),s(`
`),e("span",{class:"line"},[e("span",{style:{color:"#9CDCFE"}},"dataSource"),e("span",{style:{color:"#D4D4D4"}},"."),e("span",{style:{color:"#9CDCFE"}},"startsWith"),e("span",{style:{color:"#D4D4D4"}}," = "),e("span",{style:{color:"#CE9178"}},'"Jo"'),e("span",{style:{color:"#D4D4D4"}},";")])])])],-1),f=n("",9),g=e("p",null,"The object passed to the constructor that contains the set of objects needed by the standard data source, and those that are most likely to be used in custom implementations.",-1),b=e("p",null,[s("An instance of the DbContext that contains a "),e("code",null,"DbSet<T>"),s(" for the entity served by the data source.")],-1),v=e("p",null,"The user making the current request.",-1),T=e("p",null,"The max number of search terms to process when interpreting a search term word-by-word. Override by setting a value in the constructor.",-1),A=e("p",null,"The page size to use if none is specified by the client. Override by setting a value in the constructor.",-1),S=n("",7),_=n("",3),E=e("p",null,[s("Allows for explicitly specifying the "),e("a",{href:"/Coalesce/concepts/include-tree.html"},"Include Tree"),s(" that will be used when serializing results obtained from this data source into DTOs. By default, the query that is build up through all the other methods in the data source will be used to build the include tree.")],-1),w=e("p",null,[s("Called by other methods in the standard data source to determine whether or not EF Core async methods will be used to evaluate queries. This may be globally disabled when bugs like "),e("a",{href:"https://github.com/dotnet/SqlClient/issues/593",target:"_blank",rel:"noreferrer"},"https://github.com/dotnet/SqlClient/issues/593"),s(" are present in EF Core.")],-1),I=e("p",null,[s("A simple wrapper that calls "),e("code",null,"ApplyListPropertyFilters"),s(" and "),e("code",null,"ApplyListSearchTerm"),s(".")],-1),F=e("p",null,[s("For each value in "),e("code",null,"parameters.Filter"),s(" that the user is allowed to read and filter by, invoke "),e("code",null,"ApplyListPropertyFilter"),s(" to apply a filter to the query.")],-1),P=n("",2),x=e("p",null,[s("Applies predicates to the query based on the search term in "),e("code",null,"parameters.Search"),s(". See "),e("a",{href:"/Coalesce/modeling/model-components/attributes/search.html"},"[Search]"),s(" for a detailed look at how searching works in Coalesce.")],-1),k=e("p",null,[s("If any client-specified sort orders are present, invokes "),e("code",null,"ApplyListClientSpecifiedSorting"),s(". Otherwise, invokes "),e("code",null,"ApplyListDefaultSorting"),s(".")],-1),q=e("p",null,[s("Applies sorting to the query based on sort orders specified by the client. If the client specified "),e("code",null,'"none"'),s(" as the sort field, no sorting will take place.")],-1),B=e("p",null,[s("Applies default sorting behavior to the query, including behavior defined with use of "),e("code",null,"[DefaultOrderBy]"),s(" in C# POCOs, as well as fallback sorting to "),e("code",null,'"Name"'),s(" or primary key properties.")],-1),L=e("p",null,"Applies paging to the query based on incoming parameters. Provides the actual page and pageSize that were used as out parameters.",-1),Q=e("p",null,[s("Simple wrapper around invoking "),e("code",null,".Count()"),s(" on a query.")],-1),V=n("",4),M=n("",7);function G(N,R,O,W,j,z){const t=r("CodeTabs"),o=r("Prop");return i(),c("div",null,[D,a(t,null,{vue:l(()=>[y,u]),_:1}),h,a(t,null,{vue:l(()=>[C,m]),_:1}),f,a(o,{def:"CrudContext<TContext> Context"}),g,a(o,{def:"TContext Db"}),b,a(o,{def:"ClaimsPrincipal User"}),v,a(o,{def:"int MaxSearchTerms"}),T,a(o,{def:"int DefaultPageSize"}),A,a(o,{def:"int MaxPageSize"}),S,a(o,{def:`IQueryable<T> GetQuery(IDataSourceParameters parameters);
Task<IQueryable<T>> GetQueryAsync(IDataSourceParameters parameters);`}),_,a(o,{def:"IncludeTree? GetIncludeTree(IQueryable<T> query, IDataSourceParameters parameters)"}),E,a(o,{def:"bool CanEvalQueryAsynchronously(IQueryable<T> query)"}),w,a(o,{def:"IQueryable<T> ApplyListFiltering(IQueryable<T> query, IFilterParameters parameters)"}),I,a(o,{def:"IQueryable<T> ApplyListPropertyFilters(IQueryable<T> query, IFilterParameters parameters)"}),F,a(o,{def:"IQueryable<T> ApplyListPropertyFilter(IQueryable<T> query, PropertyViewModel prop, string value)"}),P,a(o,{def:"IQueryable<T> ApplyListSearchTerm(IQueryable<T> query, IFilterParameters parameters)"}),x,a(o,{def:"IQueryable<T> ApplyListSorting(IQueryable<T> query, IListParameters parameters)"}),k,a(o,{def:"IQueryable<T> ApplyListClientSpecifiedSorting(IQueryable<T> query, IListParameters parameters)"}),q,a(o,{def:"IQueryable<T> ApplyListDefaultSorting(IQueryable<T> query)"}),B,a(o,{def:"IQueryable<T> ApplyListPaging(IQueryable<T> query, IListParameters parameters, int? totalCount, out int page, out int pageSize)"}),L,a(o,{def:"Task<int> GetListTotalCountAsync(IQueryable<T> query, IFilterParameters parameters)"}),Q,a(o,{def:`void TransformResults(IReadOnlyList<T> results, IDataSourceParameters parameters);
Task TransformResultsAsync(IReadOnlyList<T> results, IDataSourceParameters parameters);`}),V,a(o,{def:"IList<TDto> TrimListFields<TDto>(IList<TDto> mappedResult, IListParameters parameters)"}),M])}const Y=p(d,[["render",G]]);export{U as __pageData,Y as default};
