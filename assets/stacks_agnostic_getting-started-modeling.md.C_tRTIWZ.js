import{_ as e,c as t,o,a7 as a}from"./chunks/framework.BkavzUpE.js";const h=JSON.parse('{"title":"Data Modeling","description":"","frontmatter":{},"headers":[],"relativePath":"stacks/agnostic/getting-started-modeling.md","filePath":"stacks/agnostic/getting-started-modeling.md"}'),n={name:"stacks/agnostic/getting-started-modeling.md"},i=a('<h1 id="data-modeling" tabindex="-1">Data Modeling <a class="header-anchor" href="#data-modeling" aria-label="Permalink to &quot;Data Modeling&quot;">â€‹</a></h1><p>At this point, you can open up the newly-created solution in Visual Studio and run your application. However, your application won&#39;t do much without a data model, so you will probably want to do the following:</p><ul><li><p>Create an initial <a href="/Coalesce/modeling/model-types/entities.html">Data Model</a> by adding EF entity classes to the data project and the corresponding <code>DbSet&lt;&gt;</code> properties to <code>AppDbContext</code>. You will notice that the starter project includes a single model, <code>Widget</code>, to start with. Feel free to change this model or remove it entirely. Read <a href="/Coalesce/modeling/model-types/entities.html">Entity Models</a> for more information about creating a data model.</p></li><li><p>Run <code>dotnet ef migrations add Init</code> (Init can be any name) in the data project to create an initial database migration.</p></li><li><p>Run Coalesce&#39;s code generation by either:</p><ul><li>Running <code>dotnet coalesce</code> in the web project&#39;s root directory (<code>dotnet restore</code> first if you get an error about &quot;command or file was not found&quot;).</li><li>Running the <code>coalesce</code> npm script in the Task Runner Explorer, or in a terminal with <code>npm run coalesce</code>.</li></ul></li></ul><p>You&#39;re now at a point where you can start creating your own pages!</p>',4),d=[i];function r(l,c,s,p,g,u){return o(),t("div",null,d)}const _=e(n,[["render",r]]);export{h as __pageData,_ as default};
