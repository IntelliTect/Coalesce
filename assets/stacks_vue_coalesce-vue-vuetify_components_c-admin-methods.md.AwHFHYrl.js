import{_ as l,c as t,I as o,a7 as n,l as e,a as s,D as c,o as p}from"./chunks/framework.BkavzUpE.js";const k=JSON.parse('{"title":"c-admin-methods","description":"","frontmatter":{},"headers":[],"relativePath":"stacks/vue/coalesce-vue-vuetify/components/c-admin-methods.md","filePath":"stacks/vue/coalesce-vue-vuetify/components/c-admin-methods.md"}'),r={name:"stacks/vue/coalesce-vue-vuetify/components/c-admin-methods.md"},d=n('<h1 id="c-admin-methods" tabindex="-1">c-admin-methods <a class="header-anchor" href="#c-admin-methods" aria-label="Permalink to &quot;c-admin-methods&quot;">​</a></h1><p>Renders in a <a href="https://vuetifyjs.com/" target="_blank" rel="noreferrer">Vuetify</a> <a href="https://vuetifyjs.com/en/components/expansion-panels/" target="_blank" rel="noreferrer">v-expansion-panels</a> a <a href="/Coalesce/stacks/vue/coalesce-vue-vuetify/components/c-admin-method.html">c-admin-method</a> for each method on a <a href="/Coalesce/stacks/vue/layers/viewmodels.html">ViewModel</a> or <a href="/Coalesce/stacks/vue/layers/viewmodels.html">ListViewModel</a>.</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-admin-methods</span><span style="color:#D4D4D4;"> :</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;"> class</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;x&quot;</span><span style="color:#9CDCFE;"> auto-reload-model</span><span style="color:#D4D4D4;"> /</span><span style="color:#808080;">&gt;</span></span></code></pre></div><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-admin-methods</span><span style="color:#D4D4D4;"> :</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;"> auto-reload-model</span><span style="color:#D4D4D4;"> /</span><span style="color:#808080;">&gt;</span></span></code></pre></div><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-admin-methods</span><span style="color:#D4D4D4;"> :</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">personList</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;"> auto-reload-model</span><span style="color:#D4D4D4;"> /</span><span style="color:#808080;">&gt;</span></span></code></pre></div><h2 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h2>',7),i=e("p",null,[s("An "),e("a",{href:"/Coalesce/stacks/vue/layers/viewmodels.html"},"ViewModel"),s(" or "),e("a",{href:"/Coalesce/stacks/vue/layers/viewmodels.html"},"ListViewModel"),s(" or "),e("a",{href:"/Coalesce/modeling/model-types/services.html#generated-code"},"ServiceViewModel"),s(" whose methods should each render as a "),e("a",{href:"/Coalesce/stacks/vue/coalesce-vue-vuetify/components/c-admin-method.html"},"c-admin-method"),s(".")],-1),m=e("p",null,[s("True if the "),e("code",null,"model"),s(" should have its "),e("code",null,"$load"),s(" invoked after a successful invocation of any method.")],-1);function h(u,D,y,v,C,f){const a=c("Prop");return p(),t("div",null,[d,o(a,{def:"model: ViewModel | ListViewModel",lang:"ts"}),i,o(a,{def:"autoReloadModel?: boolean = false",lang:"ts"}),m])}const g=l(r,[["render",h]]);export{k as __pageData,g as default};
