import{_ as l,c as t,I as o,a7 as n,l as e,a as s,D as c,o as p}from"./chunks/framework.BkavzUpE.js";const k=JSON.parse('{"title":"c-admin-methods","description":"","frontmatter":{},"headers":[],"relativePath":"stacks/vue/coalesce-vue-vuetify/components/c-admin-methods.md","filePath":"stacks/vue/coalesce-vue-vuetify/components/c-admin-methods.md"}'),r={name:"stacks/vue/coalesce-vue-vuetify/components/c-admin-methods.md"},d=n("",7),i=e("p",null,[s("An "),e("a",{href:"/Coalesce/stacks/vue/layers/viewmodels.html"},"ViewModel"),s(" or "),e("a",{href:"/Coalesce/stacks/vue/layers/viewmodels.html"},"ListViewModel"),s(" or "),e("a",{href:"/Coalesce/modeling/model-types/services.html#generated-code"},"ServiceViewModel"),s(" whose methods should each render as a "),e("a",{href:"/Coalesce/stacks/vue/coalesce-vue-vuetify/components/c-admin-method.html"},"c-admin-method"),s(".")],-1),m=e("p",null,[s("True if the "),e("code",null,"model"),s(" should have its "),e("code",null,"$load"),s(" invoked after a successful invocation of any method.")],-1);function h(u,D,y,v,C,f){const a=c("Prop");return p(),t("div",null,[d,o(a,{def:"model: ViewModel | ListViewModel",lang:"ts"}),i,o(a,{def:"autoReloadModel?: boolean = false",lang:"ts"}),m])}const g=l(r,[["render",h]]);export{k as __pageData,g as default};
