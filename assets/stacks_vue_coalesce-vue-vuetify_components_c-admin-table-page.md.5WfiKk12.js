import{_ as o,c as t,I as n,a7 as l,l as e,a,D as p,o as c}from"./chunks/framework.BkavzUpE.js";const g=JSON.parse('{"title":"c-admin-table-page","description":"","frontmatter":{},"headers":[],"relativePath":"stacks/vue/coalesce-vue-vuetify/components/c-admin-table-page.md","filePath":"stacks/vue/coalesce-vue-vuetify/components/c-admin-table-page.md"}'),r={name:"stacks/vue/coalesce-vue-vuetify/components/c-admin-table-page.md"},i=l(`<h1 id="c-admin-table-page" tabindex="-1">c-admin-table-page <a class="header-anchor" href="#c-admin-table-page" aria-label="Permalink to &quot;c-admin-table-page&quot;">​</a></h1><p>A full-featured page for interacting with a <a href="/Coalesce/stacks/vue/layers/viewmodels.html">ListViewModel</a>. Provides a <a href="/Coalesce/stacks/vue/coalesce-vue-vuetify/components/c-admin-table.html">c-admin-table</a> and a <a href="/Coalesce/stacks/vue/coalesce-vue-vuetify/components/c-admin-methods.html">c-admin-methods</a> for the list. Designed to be routed to directly with <a href="https://router.vuejs.org/" target="_blank" rel="noreferrer">vue-router</a>.</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">CAdminTablePage</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;coalesce-vue-vuetify3&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> router</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> Router</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#6A9955;">  // ...</span></span>
<span class="line"><span style="color:#9CDCFE;">  routes:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#6A9955;">    // ... other routes</span></span>
<span class="line"><span style="color:#D4D4D4;">    {</span></span>
<span class="line"><span style="color:#9CDCFE;">      path:</span><span style="color:#CE9178;"> &#39;/admin/:type&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">      name:</span><span style="color:#CE9178;"> &#39;coalesce-admin-list&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">      component:</span><span style="color:#9CDCFE;"> CAdminTablePage</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">      props:</span><span style="color:#569CD6;"> true</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">  ]</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span></code></pre></div><h2 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h2>`,5),d=e("p",null,"The PascalCase name of the type to be listed.",-1),m=e("p",null,[a("Controls whether auto-save is used for items when in edit mode. If "),e("code",null,"auto"),a(" (the default), auto-saves are used as long as the type has no "),e("a",{href:"/Coalesce/modeling/model-components/properties.html#init-only-properties"},"init-only properties"),a(".")],-1),u=e("p",null,[a("An optional "),e("a",{href:"/Coalesce/stacks/vue/layers/viewmodels.html"},"ListViewModel"),a(" that will be used if provided instead of the one the component will otherwise create automatically.")],-1);function D(h,y,C,f,v,_){const s=p("Prop");return c(),t("div",null,[i,n(s,{def:"type: string",lang:"ts"}),d,n(s,{def:"autoSave?: 'auto' | boolean = 'auto'",lang:"ts"}),m,n(s,{def:"list?: ListViewModel",lang:"ts"}),u])}const P=o(r,[["render",D]]);export{g as __pageData,P as default};
