import{_ as t,c as l,I as s,a7 as n,l as e,a as o,D as c,o as p}from"./chunks/framework.BkavzUpE.js";const g=JSON.parse('{"title":"c-admin-table-toolbar","description":"","frontmatter":{},"headers":[],"relativePath":"stacks/vue/coalesce-vue-vuetify/components/c-admin-table-toolbar.md","filePath":"stacks/vue/coalesce-vue-vuetify/components/c-admin-table-toolbar.md"}'),r={name:"stacks/vue/coalesce-vue-vuetify/components/c-admin-table-toolbar.md"},i=n('<h1 id="c-admin-table-toolbar" tabindex="-1">c-admin-table-toolbar <a class="header-anchor" href="#c-admin-table-toolbar" aria-label="Permalink to &quot;c-admin-table-toolbar&quot;">​</a></h1><p>A full-featured toolbar for a <a href="/Coalesce/stacks/vue/layers/viewmodels.html">ListViewModel</a> designed to be used on an admin page, including &quot;Create&quot; and &quot;Reload&quot; buttons, a <a href="/Coalesce/stacks/vue/coalesce-vue-vuetify/components/c-list-range-display.html">c-list-range-display</a>, a <a href="/Coalesce/stacks/vue/coalesce-vue-vuetify/components/c-list-page.html">c-list-page</a>, a search field, <a href="/Coalesce/stacks/vue/coalesce-vue-vuetify/components/c-list-filters.html">c-list-filters</a>, and a <a href="/Coalesce/stacks/vue/coalesce-vue-vuetify/components/c-list-page-size.html">c-list-page-size</a>.</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-admin-table-toolbar</span><span style="color:#D4D4D4;"> :</span><span style="color:#9CDCFE;">list</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">personList</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;"> /</span><span style="color:#808080;">&gt;</span></span></code></pre></div><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-admin-table-toolbar</span><span style="color:#D4D4D4;"> :</span><span style="color:#9CDCFE;">list</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">personList</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;"> color</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;pink&quot;</span><span style="color:#9CDCFE;"> v-model</span><span style="color:#D4D4D4;">:</span><span style="color:#9CDCFE;">editable</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">isEditable</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;"> /</span><span style="color:#808080;">&gt;</span></span></code></pre></div><h2 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h2>',6),d=e("p",null,[o("The "),e("a",{href:"/Coalesce/stacks/vue/layers/viewmodels.html"},"ListViewModel"),o(" to render the toolbar for.")],-1),u=e("p",null,[o("The "),e("a",{href:"https://vuetifyjs.com/en/styles/colors/",target:"_blank",rel:"noreferrer"},"color"),o(" of the toolbar.")],-1),D=e("p",null,"If provided, adds a button to toggle editing state. Should be two-way bound with v-model.",-1);function m(y,b,h,f,v,_){const a=c("Prop");return p(),l("div",null,[i,s(a,{def:"list: ListViewModel",lang:"ts"}),d,s(a,{def:"color: string = 'primary'",lang:"ts"}),u,s(a,{def:"editable?: boolean",lang:"ts"}),s(a,{def:"'update:editable'?: (boolean: $event) => void",lang:"ts"}),D])}const k=t(r,[["render",m]]);export{g as __pageData,k as default};
