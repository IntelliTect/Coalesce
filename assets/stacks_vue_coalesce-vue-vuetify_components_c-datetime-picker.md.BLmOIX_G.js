import{_ as l,c as n,I as s,a7 as o,l as e,a as t,D as i,o as c}from"./chunks/framework.BkavzUpE.js";const S=JSON.parse('{"title":"c-datetime-picker","description":"","frontmatter":{},"headers":[],"relativePath":"stacks/vue/coalesce-vue-vuetify/components/c-datetime-picker.md","filePath":"stacks/vue/coalesce-vue-vuetify/components/c-datetime-picker.md"}'),r={name:"stacks/vue/coalesce-vue-vuetify/components/c-datetime-picker.md"},p=o(`<h1 id="c-datetime-picker" tabindex="-1">c-datetime-picker <a class="header-anchor" href="#c-datetime-picker" aria-label="Permalink to &quot;c-datetime-picker&quot;">​</a></h1><p>A general, all-purpose date/time input component that can be used either with <a href="/Coalesce/stacks/vue/layers/models.html">models</a> and <a href="/Coalesce/stacks/vue/layers/metadata.html">metadata</a> or as a standalone component using only <code>v-model</code>.</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-datetime-picker</span><span style="color:#D4D4D4;"> :</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;"> for</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;birthDate&quot;</span><span style="color:#D4D4D4;"> /</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-datetime-picker</span><span style="color:#9CDCFE;"> v-model</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">standaloneDate</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;"> /</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-datetime-picker</span><span style="color:#D4D4D4;"> </span></span>
<span class="line"><span style="color:#9CDCFE;">    v-model</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">standaloneTime</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;"> </span></span>
<span class="line"><span style="color:#9CDCFE;">    date-kind</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;time&quot;</span></span>
<span class="line"><span style="color:#9CDCFE;">    date-format</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;h:mm a&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">/</span><span style="color:#808080;">&gt;</span></span></code></pre></div><h2 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h2>`,5),d=e("p",null,"A metadata specifier for the value being bound. One of:",-1),u=e("ul",null,[e("li",null,[t("A string with the name of the value belonging to "),e("code",null,"model"),t(".")]),e("li",null,"A direct reference to a metadata object."),e("li",null,"A string in dot-notation that starts with a type name.")],-1),m=e("p",null,[t("An object owning the value that was specified by the "),e("code",null,"for"),t(" prop. If provided, the input will be bound to the corresponding property on the "),e("code",null,"model"),t(" object.")],-1),h=e("p",null,[t("If binding the component with "),e("code",null,"v-model"),t(", accepts the "),e("code",null,"value"),t(" part of "),e("code",null,"v-model"),t(".")],-1),f=e("p",null,[t("Whether the date is only a date, only a time, or contains significant date "),e("code",null,"and"),t(" time information.")],-1),D=e("p",null,[t("If the component was bound with metadata using the "),e("code",null,"for"),t(" prop, this will default to the kind specified by "),e("a",{href:"/Coalesce/modeling/model-components/attributes/date-type.html"},"[DateType]"),t(".")],-1),y=o('<p>The format of the date that will be rendered in the component&#39;s text field, and the format that will be attempted first when parsing user input in the text field.</p><p>Defaults to:</p><ul><li><code>M/d/yyyy h:mm a</code> if <code>dateKind == &#39;datetime&#39;</code>,</li><li><code>M/d/yyyy</code> if <code>dateKind == &#39;date&#39;</code>, or</li><li><code>h:mm a</code> if <code>dateKind == &#39;time&#39;</code>.</li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>When parsing a user&#39;s text input into the text field, c-datetime-picker will first attempt to parse it with the format specified by <code>dateFormat</code>, or the default as described above if not explicitly specified.</p><p>If this fails, Coalesce then tries a <a href="https://github.com/IntelliTect/Coalesce/blob/1fb00c7de5e363aaf3c1a78f45af3b949b11dff4/src/coalesce-vue/test/utils.spec.ts#L5" target="_blank" rel="noreferrer">large number of common formats</a>.</p><p>If that failed, then finally the date will be parsed with the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date" target="_blank" rel="noreferrer">Date constructor</a>, but only if the <code>dateKind</code> is <code>datetime</code> or <code>date</code>. This works fairly well on all modern browsers, but can still occasionally have issues. c-datetime-picker tries its best to filter out bad parses from the Date constructor, like dates with a year earlier than 1000.</p></div>',4),_=e("p",null,"The increments, in minutes, of the selectable value. Values should divide 60 evenly, or be multiples of 60. For example, a step of 15 allows selection of :00, :15, :30, and :45 minute time values.",-1),b=e("p",null,"The smallest allowable date/time selection.",-1),g=e("p",null,"The largest allowable date/time selection.",-1),v=e("p",null,"An array of permitted dates (items should have a time of midnight), or a function that returns true if a date is allowed for selection. Does not impact time selection.",-1),k=e("p",null,[t("The "),e("a",{href:"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones",target:"_blank",rel:"noreferrer"},"IANA Time Zone Database"),t(" name that the user will pick the date/time value in. Defaults to the value configured with "),e("a",{href:"/Coalesce/stacks/vue/layers/models.html#member-setdefaulttimezone"},[e("code",null,"setDefaultTimeZone")]),t(" if the value bound to with "),e("code",null,"model"),t("/"),e("code",null,"for"),t(" is a "),e("code",null,"DateTimeOffset"),t(".")],-1),C=e("p",null,"True if a native HTML5 input should be used instead of a popup menu with date/time pickers inside of it.",-1),w=e("p",null,[t("True if the component should be read-only. This state is also inherited from any wrapping "),e("code",null,"v-form"),t(".")],-1),T=e("p",null,[t("True if the component should be disabled. This state is also inherited from any wrapping "),e("code",null,"v-form"),t(".")],-1);function q(x,E,A,P,I,V){const a=i("Prop");return c(),n("div",null,[p,s(a,{def:"for?: string | DateProperty | DateValue",lang:"ts"}),d,u,s(a,{def:"model?: Model | DataSource",lang:"ts"}),m,s(a,{def:`value?: Date // Vue 2
modelValue?: Date // Vue 3`,lang:"ts"}),h,s(a,{def:"dateKind?: 'date' | 'time' | 'datetime' = 'datetime'",lang:"ts"}),f,D,s(a,{def:"dateFormat?: string",lang:"ts"}),y,s(a,{def:"step?: number",lang:"ts"}),_,s(a,{def:"min?: Date",lang:"ts"}),b,s(a,{def:"max?: Date",lang:"ts"}),g,s(a,{def:"allowedDates?: Date[] | ((date: Date) => boolean)",lang:"ts"}),v,s(a,{def:"timeZone?: string",lang:"ts"}),k,s(a,{def:"native?: boolean",lang:"ts"}),C,s(a,{def:"readonly?: boolean",lang:"ts"}),w,s(a,{def:"disabled?: boolean",lang:"ts"}),T])}const N=l(r,[["render",q]]);export{S as __pageData,N as default};
