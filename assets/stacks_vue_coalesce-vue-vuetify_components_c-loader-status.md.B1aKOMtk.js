import{_ as l,c as t,I as a,a7 as o,l as e,a as n,D as p,o as r}from"./chunks/framework.BkavzUpE.js";const F=JSON.parse('{"title":"c-loader-status","description":"","frontmatter":{},"headers":[],"relativePath":"stacks/vue/coalesce-vue-vuetify/components/c-loader-status.md","filePath":"stacks/vue/coalesce-vue-vuetify/components/c-loader-status.md"}'),c={name:"stacks/vue/coalesce-vue-vuetify/components/c-loader-status.md"},i=o(`<h1 id="c-loader-status" tabindex="-1">c-loader-status <a class="header-anchor" href="#c-loader-status" aria-label="Permalink to &quot;c-loader-status&quot;">​</a></h1><p>A component for displaying progress and error information for one or more <a href="/Coalesce/stacks/vue/layers/api-clients.html#api-callers">API Callers</a>.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>It is highly recommended that all <a href="/Coalesce/stacks/vue/layers/api-clients.html#api-callers">API Callers</a> utilized by your application that don&#39;t have any other kind of error handling should be represented by a <a href="/Coalesce/stacks/vue/coalesce-vue-vuetify/components/c-loader-status.html">c-loader-status</a> so that users can be aware of any errors that occur.</p></div><p>Progress is indicated with a <a href="https://vuetifyjs.com/" target="_blank" rel="noreferrer">Vuetify</a> <a href="https://vuetifyjs.com/en/components/progress-linear" target="_blank" rel="noreferrer">v-progress-linear</a> component, and errors are displayed in a <a href="https://vuetifyjs.com/en/components/alerts/" target="_blank" rel="noreferrer">v-alert</a>. <a href="https://vuetifyjs.com/en/styles/transitions/" target="_blank" rel="noreferrer">Transitions</a> are applied to smoothly fade between the different states the the caller can be in.</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><p>Wrap contents of a details/edit page:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">h1</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">Person Details</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">h1</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-loader-status</span></span>
<span class="line"><span style="color:#D4D4D4;">    :</span><span style="color:#9CDCFE;">loaders</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;">{ </span></span>
<span class="line"><span style="color:#CE9178;">        &#39;no-initial-content no-error-content&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> [</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">$load</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#CE9178;">        &#39;&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> [</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">$save</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">$delete</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span><span style="color:#D4D4D4;">&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">    #</span><span style="color:#9CDCFE;">default</span></span>
<span class="line"><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    First Name: {{ </span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">firstName</span><span style="color:#D4D4D4;"> }}</span></span>
<span class="line"><span style="color:#D4D4D4;">    Last Name: {{ </span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">lastName</span><span style="color:#D4D4D4;"> }}</span></span>
<span class="line"><span style="color:#D4D4D4;">    Employer: {{ </span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">company</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;"> }}</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">c-loader-status</span><span style="color:#808080;">&gt;</span></span></code></pre></div><p>Use <code>c-loader-status</code> to render a progress bar and any error messages, but don&#39;t use it to control content:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-loader-status</span><span style="color:#D4D4D4;"> :</span><span style="color:#9CDCFE;">loaders</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">list</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">$load</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;"> /</span><span style="color:#808080;">&gt;</span></span></code></pre></div><p>Wrap a save/submit button:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-loader-status</span><span style="color:#D4D4D4;"> :</span><span style="color:#9CDCFE;">loaders</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">$save</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">$delete</span><span style="color:#D4D4D4;">]</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;"> no-loading-content</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">button</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;"> Save </span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">button</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">button</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;"> Delete </span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">button</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">c-loader-status</span><span style="color:#808080;">&gt;</span></span></code></pre></div><p>Hides the table before the first load has completed, or if loading the list encountered an error. Don&#39;t show the progress bar after we&#39;ve already loaded the list for the first time (useful for loads that occur without user interaction, e.g. <code>setInterval</code>):</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-loader-status</span></span>
<span class="line"><span style="color:#D4D4D4;">    :</span><span style="color:#9CDCFE;">loaders</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">list</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">$load</span><span style="color:#D4D4D4;">&quot;</span></span>
<span class="line"><span style="color:#9CDCFE;">    no-initial-content</span><span style="color:#D4D4D4;"> </span></span>
<span class="line"><span style="color:#9CDCFE;">    no-error-content</span></span>
<span class="line"><span style="color:#9CDCFE;">    no-secondary-progress</span><span style="color:#D4D4D4;"> </span></span>
<span class="line"><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">table</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">        &lt;</span><span style="color:#569CD6;">tr</span><span style="color:#9CDCFE;"> v-for</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">item</span><span style="color:#569CD6;"> in</span><span style="color:#9CDCFE;"> list</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">$items</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;"> ... </span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">tr</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">    &lt;/</span><span style="color:#569CD6;">table</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">c-loader-status</span><span style="color:#808080;">&gt;</span></span></code></pre></div><h2 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h2>`,14),d=o(`<div><p>This prop has multiple options that support simple or complex usage scenarios:</p><h4 id="flags-per-component" tabindex="-1">Flags Per Component <a class="header-anchor" href="#flags-per-component" aria-label="Permalink to &quot;Flags Per Component&quot;">​</a></h4><p>A single instance, or array of <a href="/Coalesce/stacks/vue/layers/api-clients.html#api-callers">API Callers</a>, whose status will be represented by the component. The <a href="#flags">flags</a> for these objects will be determined from the component-level <a href="#flags-props">flag props</a>.</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-loader-status</span></span>
<span class="line"><span style="color:#D4D4D4;">  :</span><span style="color:#9CDCFE;">loaders</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">product</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">$load</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">$load</span><span style="color:#D4D4D4;">]</span><span style="color:#D4D4D4;">&quot;</span></span>
<span class="line"><span style="color:#9CDCFE;">  no-initial-content</span></span>
<span class="line"><span style="color:#9CDCFE;">  no-error-content</span></span>
<span class="line"><span style="color:#D4D4D4;">/</span><span style="color:#808080;">&gt;</span></span></code></pre></div><h4 id="flags-per-caller" tabindex="-1">Flags Per Caller <a class="header-anchor" href="#flags-per-caller" aria-label="Permalink to &quot;Flags Per Caller&quot;">​</a></h4><p>A more advanced usage allows passing different flags for different callers. Provide a dictionary object with entries mapping zero or more <a href="#flags">flags</a> to one or more <a href="/Coalesce/stacks/vue/layers/api-clients.html#api-callers">API Callers</a>. Multiple entries of flags/caller pairs may be specified in the dictionary to give different behavior to different API callers. These flags are layered on top of the base <a href="#flags-props">flag props</a>.</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-loader-status</span></span>
<span class="line"><span style="color:#D4D4D4;">  :</span><span style="color:#9CDCFE;">loaders</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;">{ </span></span>
<span class="line"><span style="color:#CE9178;">    &#39;no-initial-content no-error-content&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> [</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">$load</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#CE9178;">    &#39;no-loading-content&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> [</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">$save</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">$delete</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span><span style="color:#D4D4D4;">&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">/</span><span style="color:#808080;">&gt;</span></span></code></pre></div></div><br>`,2),D=e("p",null,"Specify if space should be reserved for the progress indicator. If set to false, the content in the default slot may jump up and down slightly as the progress indicator shows and hides.",-1),y=e("p",null,"Positions the progress bar absolutely. This can be useful in compact interfaces where extra space for the progress bar is undesirable, allowing the progress bar to potentially overlap content while active.",-1),h=e("p",null,[n("Specifies the height in pixels of the "),e("a",{href:"https://vuetifyjs.com/en/components/progress-linear",target:"_blank",rel:"noreferrer"},"v-progress-linear"),n(" used to indicate progress.")],-1),u=o('<p>Component level <a href="#flags">flags</a> options that control behavior when the simple form of <code>loaders</code> (single instance or array) is used, as well as provide baseline defaults that can be overridden by the advanced form of <code>loaders</code> (object map) .</p><h2 id="flags" tabindex="-1">Flags <a class="header-anchor" href="#flags" aria-label="Permalink to &quot;Flags&quot;">​</a></h2><p>The available flags are as follows, all of which default to <code>true</code>. In the object literal syntax for <code>loaders</code>, the <code>no-</code> prefix may be omitted to set the flag to <code>true</code>.</p><table><thead><tr><th><div style="width:160px;">Flag</div></th><th>Description</th></tr></thead><tbody><tr><td><code>no-loading-content</code></td><td>Controls whether the default slot is rendered while any API caller is loading (i.e. when <code>caller.isLoading === true</code>).</td></tr><tr><td><code>no-error-content</code></td><td>Controls whether the default slot is rendered while any API Caller is in an error state (i.e. when <code>caller.wasSuccessful === false</code>).</td></tr><tr><td><code>no-initial-content</code></td><td>Controls whether the default slot is rendered while any API Caller has yet to receive a response for the first time (i.e. when <code>caller.wasSuccessful === null</code>).</td></tr><tr><td><code>no-progress</code></td><td>Master toggle for whether the progress indicator is shown in any scenario.</td></tr><tr><td><code>no-initial-progress</code></td><td>Controls whether the progress indicator is shown when an API Caller is loading for the very first time (i.e. when <code>caller.wasSuccessful === null</code>).</td></tr><tr><td><code>no-secondary-progress</code></td><td>Controls whether the progress indicator is shown when an API Caller is loading any time after its first invocation (i.e. when <code>caller.wasSuccessful !== null</code>).</td></tr></tbody></table><h2 id="slots" tabindex="-1">Slots <a class="header-anchor" href="#slots" aria-label="Permalink to &quot;Slots&quot;">​</a></h2><p><code>default</code> - Accepts the content whose visibility is controlled by the state of the supplied <a href="/Coalesce/stacks/vue/layers/api-clients.html#api-callers">API Callers</a>. It will be shown or hidden according to the flags defined for each caller.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>(Vue 2 Only): Define the default slot as a <a href="https://v2.vuejs.org/v2/guide/components-slots.html#Scoped-Slots" target="_blank" rel="noreferrer">scoped slot</a> (e.g. with <code>#default</code> or <code>v-slot:default</code> on the <code>c-loader-status</code>) to prevent the VNode tree from being created when the content should be hidden. This improves performance and helps avoid null reference errors that can be caused when trying to render objects that haven&#39;t been loaded yet.</p></div>',7);function C(f,g,m,b,v,_){const s=p("Prop");return r(),t("div",null,[i,a(s,{def:`loaders: 
  // Flags per component:
  | ApiCaller 
  | ApiCaller[]
  // Flags per caller:
  | { [flags: string]: ApiCaller | ApiCaller[] } `,lang:"ts"}),d,a(s,{def:"progressPlaceholder: boolean = true",lang:"ts"}),D,a(s,{def:"progressAbsolute: boolean = false",lang:"ts"}),y,a(s,{def:"height: number = 10",lang:"ts"}),h,a(s,{def:`
no-loading-content?: boolean;
no-error-content?: boolean;
no-initial-content?: boolean;
no-progress?: boolean;
no-initial-progress?: boolean;
no-secondary-progress?: boolean;`,lang:"ts",id:"flags-props"}),u])}const w=l(c,[["render",C]]);export{F as __pageData,w as default};
