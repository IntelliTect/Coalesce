import{_ as l,c as o,I as n,a7 as t,l as s,a,D as p,o as c}from"./chunks/framework.BkavzUpE.js";const T=JSON.parse('{"title":"c-select-string-value","description":"","frontmatter":{},"headers":[],"relativePath":"stacks/vue/coalesce-vue-vuetify/components/c-select-string-value.md","filePath":"stacks/vue/coalesce-vue-vuetify/components/c-select-string-value.md"}'),r={name:"stacks/vue/coalesce-vue-vuetify/components/c-select-string-value.md"},D=t(`<h1 id="c-select-string-value" tabindex="-1">c-select-string-value <a class="header-anchor" href="#c-select-string-value" aria-label="Permalink to &quot;c-select-string-value&quot;">​</a></h1><p>A dropdown component that will present a list of suggested string values from a custom API endpoint. Allows users to input values that aren&#39;t provided by the endpoint.</p><p>Effectively, this is a server-driven autocomplete list.</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-select-string-value</span><span style="color:#D4D4D4;"> </span></span>
<span class="line"><span style="color:#D4D4D4;">    :</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;"> </span></span>
<span class="line"><span style="color:#9CDCFE;">    for</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;jobTitle&quot;</span></span>
<span class="line"><span style="color:#9CDCFE;">    method</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;getSuggestedJobTitles&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">/</span><span style="color:#808080;">&gt;</span></span></code></pre></div><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> selectedTitle</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">ref</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">&gt;();</span></span></code></pre></div><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-select-string-value</span><span style="color:#D4D4D4;"> </span></span>
<span class="line"><span style="color:#9CDCFE;">    v-model</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">selectedTitle</span><span style="color:#D4D4D4;">&quot;</span></span>
<span class="line"><span style="color:#9CDCFE;">    label</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;Job Title&quot;</span></span>
<span class="line"><span style="color:#9CDCFE;">    for</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;Person&quot;</span></span>
<span class="line"><span style="color:#9CDCFE;">    method</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;getSuggestedJobTitles&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">/</span><span style="color:#808080;">&gt;</span></span></code></pre></div><div class="language-c#"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#569CD6;">class</span><span style="color:#4EC9B0;"> Person</span><span style="color:#D4D4D4;"> </span></span>
<span class="line"><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#569CD6;">    public</span><span style="color:#569CD6;"> int</span><span style="color:#9CDCFE;"> PersonId</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; } </span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">    public</span><span style="color:#569CD6;"> string</span><span style="color:#9CDCFE;"> JobTitle</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#4EC9B0;">Coalesce</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#569CD6;">    public</span><span style="color:#569CD6;"> static</span><span style="color:#569CD6;"> async</span><span style="color:#4EC9B0;"> Task</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">ICollection</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#569CD6;">string</span><span style="color:#D4D4D4;">&gt;&gt; </span><span style="color:#DCDCAA;">GetSuggestedJobTitles</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#4EC9B0;">      AppDbContext</span><span style="color:#9CDCFE;"> db</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">string</span><span style="color:#9CDCFE;"> search</span></span>
<span class="line"><span style="color:#D4D4D4;">    )</span></span>
<span class="line"><span style="color:#D4D4D4;">    {</span></span>
<span class="line"><span style="color:#C586C0;">        return</span><span style="color:#569CD6;"> await</span><span style="color:#9CDCFE;"> db</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">People</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">Select</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">p</span><span style="color:#D4D4D4;"> =&gt; </span><span style="color:#9CDCFE;">p</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">JobTitle</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">Distinct</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">Where</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">t</span><span style="color:#D4D4D4;"> =&gt; </span><span style="color:#9CDCFE;">t</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">StartsWith</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">search</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">OrderBy</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">t</span><span style="color:#D4D4D4;"> =&gt; </span><span style="color:#9CDCFE;">t</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">Take</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">100</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">ToListAsync</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div><h2 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h2>`,9),i=s("p",null,"A metadata specifier for the value being bound. One of:",-1),y=s("ul",null,[s("li",null,[a("A string with the name of the bound value belonging to "),s("code",null,"model"),a(", or a direct reference to a metadata object that describes the bound value belonging to "),s("code",null,"model"),a(".")]),s("li",null,[a("A string equal to the name of the type that owns the method described by "),s("code",null,"method"),a(". Use "),s("code",null,"v-model"),a(" to bind the selected string value.")])],-1),d=s("p",null,[a("An object owning the value that was specified by the "),s("code",null,"for"),a(" prop. If provided, the input will be bound to the corresponding property on the "),s("code",null,"model"),a(" object.")],-1),u=s("p",null,[a("The camel-cased name of the "),s("a",{href:"/Coalesce/modeling/model-components/methods.html"},"Custom Method"),a(" to invoke to get the list of valid values. Will be passed a single string parameter "),s("code",null,"search"),a(". Must be a static method on the type of the provided "),s("code",null,"model"),a(" object that returns a collection of strings.")],-1),C=s("p",null,[a("An optional set of "),s("a",{href:"/Coalesce/modeling/model-components/data-sources.html#standard-parameters"},"Data Source Standard Parameters"),a(" to pass to API calls made to the server.")],-1),h=s("p",null,"True if the method should be invoked and the list displayed when the entered search term is blank.",-1),g=s("p",null,"True if the bound value should be updated as the user types. Otherwise, the bound value is updated when focus is lost or when a suggested value is chosen. This is only applicable for Vuetify 2 - in Vuetify 3, this is the default behavior.",-1);function m(v,b,f,E,_,A){const e=p("Prop");return c(),o("div",null,[D,n(e,{def:"for: string | Property | Value",lang:"ts"}),i,y,n(e,{def:"model: Model",lang:"ts"}),d,n(e,{def:"method: string",lang:"ts"}),u,n(e,{def:"params?: DataSourceParameters",lang:"ts"}),C,n(e,{def:"listWhenEmpty?: boolean = false",lang:"ts"}),h,n(e,{def:"eager?: boolean = false",lang:"ts"}),g])}const k=l(r,[["render",m]]);export{T as __pageData,k as default};
