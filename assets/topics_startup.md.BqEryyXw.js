import{_ as o,c as l,I as n,a7 as p,l as s,a as e,D as t,o as r}from"./chunks/framework.BkavzUpE.js";const F=JSON.parse('{"title":"Config: ASP.NET Core","description":"","frontmatter":{"title":"Config: ASP.NET Core"},"headers":[],"relativePath":"topics/startup.md","filePath":"topics/startup.md"}'),c={name:"topics/startup.md"},D=p(`<h1 id="application-configuration" tabindex="-1">Application Configuration <a class="header-anchor" href="#application-configuration" aria-label="Permalink to &quot;Application Configuration&quot;">â€‹</a></h1><p>In order for Coalesce to work in your application, you must register the needed services in your <code>Startup.cs</code> or <code>Program.cs</code>. Doing so is simple:</p><div class="language-c#"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#569CD6;">public</span><span style="color:#569CD6;"> void</span><span style="color:#DCDCAA;"> ConfigureServices</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">IServiceCollection</span><span style="color:#9CDCFE;"> services</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#9CDCFE;">    services</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">AddCoalesce</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">AppDbContext</span><span style="color:#D4D4D4;">&gt;();</span></span>
<span class="line"><span style="color:#D4D4D4;">    ...</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div><p>This registers all the basic services that Coalesce needs in order to work with your EF DbContext. However, there are many more options available. Here&#39;s a more complete invocation of <code>AddCoalesce</code> that takes advantage of many of the options available:</p><div class="language-c#"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#569CD6;">public</span><span style="color:#569CD6;"> void</span><span style="color:#DCDCAA;"> ConfigureServices</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">IServiceCollection</span><span style="color:#9CDCFE;"> services</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#9CDCFE;">    services</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">AddCoalesce</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">builder</span><span style="color:#D4D4D4;"> =&gt; </span><span style="color:#9CDCFE;">builder</span></span>
<span class="line"><span style="color:#D4D4D4;">        .</span><span style="color:#DCDCAA;">AddContext</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">AppDbContext</span><span style="color:#D4D4D4;">&gt;()</span></span>
<span class="line"><span style="color:#D4D4D4;">        .</span><span style="color:#DCDCAA;">UseDefaultDataSource</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">typeof</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">MyDataSource</span><span style="color:#D4D4D4;">&lt;,&gt;))</span></span>
<span class="line"><span style="color:#D4D4D4;">        .</span><span style="color:#DCDCAA;">UseDefaultBehaviors</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">typeof</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">MyBehaviors</span><span style="color:#D4D4D4;">&lt;,&gt;))</span></span>
<span class="line"><span style="color:#D4D4D4;">        .</span><span style="color:#DCDCAA;">UseTimeZone</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">TimeZoneInfo</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">FindSystemTimeZoneById</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Pacific Standard Time&quot;</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#D4D4D4;">        .</span><span style="color:#DCDCAA;">Configure</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">o</span><span style="color:#D4D4D4;"> =&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">        {</span></span>
<span class="line"><span style="color:#9CDCFE;">            o</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">ValidateAttributesForMethods</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">true</span><span style="color:#D4D4D4;">; </span><span style="color:#6A9955;">// note: true is the default</span></span>
<span class="line"><span style="color:#9CDCFE;">            o</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">ValidateAttributesForSaves</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">true</span><span style="color:#D4D4D4;">; </span><span style="color:#6A9955;">// note: true is the default</span></span>
<span class="line"><span style="color:#9CDCFE;">            o</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">DetailedExceptionMessages</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">true</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#9CDCFE;">            o</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">ExceptionResponseFactory</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">ctx</span><span style="color:#D4D4D4;"> =&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">            {</span></span>
<span class="line"><span style="color:#C586C0;">                if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">ctx</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">Exception</span><span style="color:#569CD6;"> is</span><span style="color:#4EC9B0;"> FileNotFoundException</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">                {</span></span>
<span class="line"><span style="color:#9CDCFE;">                    ctx</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">HttpContext</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">Response</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">StatusCode</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">404</span><span style="color:#D4D4D4;">; </span><span style="color:#6A9955;">// Optional - set a specific response code.</span></span>
<span class="line"><span style="color:#C586C0;">                    return</span><span style="color:#569CD6;"> new</span><span style="color:#4EC9B0;"> IntelliTect</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">Coalesce</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">Models</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">ApiResult</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">false</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&quot;File not found&quot;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">                }</span></span>
<span class="line"><span style="color:#C586C0;">                return</span><span style="color:#569CD6;"> null</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">            };</span></span>
<span class="line"><span style="color:#D4D4D4;">        });</span></span>
<span class="line"><span style="color:#D4D4D4;">    );</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span></code></pre></div><p>Available builder methods include:</p>`,6),i=s("p",null,[e("Register services needed by Coalesce to use the specified context. This is done automatically when calling the "),s("code",null,"services.AddCoalesce<AppDbContext>();"),e(" overload.")],-1),y=s("p",null,[e("Overrides the default data source used, replacing the "),s("a",{href:"/Coalesce/modeling/model-components/data-sources.html#standard-data-source"},"Standard Data Source"),e(". See "),s("a",{href:"/Coalesce/modeling/model-components/data-sources.html"},"Data Sources"),e(" for more details.")],-1),d=s("p",null,[e("Overrides the default behaviors used, replacing the "),s("a",{href:"/Coalesce/modeling/model-components/behaviors.html#standard-behaviors"},"Standard Behaviors"),e(". See "),s("a",{href:"/Coalesce/modeling/model-components/behaviors.html"},"Behaviors"),e(" for more details.")],-1),C=s("p",null,"Specify a static time zone that should be used when Coalesce is performing operations on dates/times that lack timezone information. For example, when a user inputs a search term that contains only a date, Coalesce needs to know what timezone's midnight to use when performing the search.",-1),u=s("p",null,"Specify a service implementation to use to resolve the current timezone. This should be a scoped service, and will be automatically registered if it is not already. This allows retrieving timezone information on a per-request basis from HTTP headers, Cookies, or any other source.",-1),h=s("p",null,"Configure additional options for Coalesce runtime behavior. Current options include options for server-side validation, and options for exception handling. See individual members for details.",-1);function m(f,v,A,E,g,b){const a=t("Prop");return r(),l("div",null,[D,n(a,{def:"public Builder AddContext<TDbContext>()"}),i,n(a,{def:"public Builder UseDefaultDataSource(Type dataSource)"}),y,n(a,{def:"public Builder UseDefaultBehaviors(Type behaviors)"}),d,n(a,{def:"public Builder UseTimeZone(TimeZoneInfo timeZone)"}),C,n(a,{def:"public Builder UseTimeZone<ITimeZoneResolver>()"}),u,n(a,{def:"public Builder Configure(Action<CoalesceOptions> setupAction)"}),h])}const S=o(c,[["render",m]]);export{F as __pageData,S as default};
