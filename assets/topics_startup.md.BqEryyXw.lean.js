import{_ as o,c as l,I as n,a7 as p,l as s,a as e,D as t,o as r}from"./chunks/framework.BkavzUpE.js";const F=JSON.parse('{"title":"Config: ASP.NET Core","description":"","frontmatter":{"title":"Config: ASP.NET Core"},"headers":[],"relativePath":"topics/startup.md","filePath":"topics/startup.md"}'),c={name:"topics/startup.md"},D=p("",6),i=s("p",null,[e("Register services needed by Coalesce to use the specified context. This is done automatically when calling the "),s("code",null,"services.AddCoalesce<AppDbContext>();"),e(" overload.")],-1),y=s("p",null,[e("Overrides the default data source used, replacing the "),s("a",{href:"/Coalesce/modeling/model-components/data-sources.html#standard-data-source"},"Standard Data Source"),e(". See "),s("a",{href:"/Coalesce/modeling/model-components/data-sources.html"},"Data Sources"),e(" for more details.")],-1),d=s("p",null,[e("Overrides the default behaviors used, replacing the "),s("a",{href:"/Coalesce/modeling/model-components/behaviors.html#standard-behaviors"},"Standard Behaviors"),e(". See "),s("a",{href:"/Coalesce/modeling/model-components/behaviors.html"},"Behaviors"),e(" for more details.")],-1),C=s("p",null,"Specify a static time zone that should be used when Coalesce is performing operations on dates/times that lack timezone information. For example, when a user inputs a search term that contains only a date, Coalesce needs to know what timezone's midnight to use when performing the search.",-1),u=s("p",null,"Specify a service implementation to use to resolve the current timezone. This should be a scoped service, and will be automatically registered if it is not already. This allows retrieving timezone information on a per-request basis from HTTP headers, Cookies, or any other source.",-1),h=s("p",null,"Configure additional options for Coalesce runtime behavior. Current options include options for server-side validation, and options for exception handling. See individual members for details.",-1);function m(f,v,A,E,g,b){const a=t("Prop");return r(),l("div",null,[D,n(a,{def:"public Builder AddContext<TDbContext>()"}),i,n(a,{def:"public Builder UseDefaultDataSource(Type dataSource)"}),y,n(a,{def:"public Builder UseDefaultBehaviors(Type behaviors)"}),d,n(a,{def:"public Builder UseTimeZone(TimeZoneInfo timeZone)"}),C,n(a,{def:"public Builder UseTimeZone<ITimeZoneResolver>()"}),u,n(a,{def:"public Builder Configure(Action<CoalesceOptions> setupAction)"}),h])}const S=o(c,[["render",m]]);export{F as __pageData,S as default};
