@using IntelliTect.Coalesce.Knockout.Helpers

@{ ViewBag.Fluid = true; }

<style>
    .card-view-header {
        padding: 10px 15px;
    }
    img.form-control-static {
        max-width: 100px;
        max-height: 100px;
    }
    .coalesce-upload-icon {
        cursor: pointer;
    }
</style>

<div class="card-view obj-objectChangeProperty">
    <div class="card-view-header">
        <div class="clearfix">
            <h1 style="display: inline-block">
                Object Change Property List
            </h1>
        </div>
        <div class="clearfix">
            <div style="display: inline-block; font-size: 1.1em; margin-right: 10px;">
                <i class="fa fa-arrow-circle-left" data-bind="enabled: previousPageEnabled() && !isLoading(), click: previousPage"></i>
                Page
                <input data-bind="value: page" style="width: 35px">
                of
                <span data-bind="text: pageCount"></span>
                <i class="fa fa-arrow-circle-right" data-bind="enabled: nextPageEnabled() && !isLoading(), click: nextPage"></i>
            </div>
            <select class="form-control" style="width: 100px; display: inline-block;" data-bind="value: pageSize">
                <option value="1">1</option>
                <option value="5">5</option>
                <option value="10">10</option>
                <option value="50">50</option>
                <option value="100">100</option>
                <option value="500">500</option>
                <option value="1000">1000</option>
            </select>
            <input class="form-control pull-right" style="width: 250px; margin-left: 20px" data-bind="textInput: search" placeholder="Search" />
            <div class="btn-group pull-right">
                <button data-bind="click:load" class="btn btn-sm btn-default "><i class="fa fa-refresh"></i> Refresh</button>
            </div>
        </div>
    </div>
    
    <hr />
    
    <div class="flex-card-container card-view-body" style="display: none" data-bind="foreach: items, visible: isLoaded">
        <div class="flex-card">
            <div class="card-heading">
                <h3 class="card-title">
                    <span data-bind="text: propertyName"></span>
                </h3>
            </div>
            <div class="card-body flex">
                <dl>
                    <dt>Parent Id</dt>
                    <dd>
                        @(Knockout.DisplayFor<IntelliTect.Coalesce.AuditLogging.ObjectChangeProperty>(p => p.ParentId, false))
                    </dd>
                    <dt>Property Name</dt>
                    <dd>
                        @(Knockout.DisplayFor<IntelliTect.Coalesce.AuditLogging.ObjectChangeProperty>(p => p.PropertyName, false))
                    </dd>
                    <dt>Old Value</dt>
                    <dd>
                        @(Knockout.DisplayFor<IntelliTect.Coalesce.AuditLogging.ObjectChangeProperty>(p => p.OldValue, false))
                    </dd>
                    <dt>New Value</dt>
                    <dd>
                        @(Knockout.DisplayFor<IntelliTect.Coalesce.AuditLogging.ObjectChangeProperty>(p => p.NewValue, false))
                    </dd>
                </dl>
                
                <div style="margin-top: auto">
                    <!-- Editor buttons -->
                    <div class="pull-right" role="group">
                    </div>
                    <span class="form-control-static" data-bind="text: errorMessage"></span>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts
{
    <script>
        @if (!ViewBag.Editable)
        {
            @:Coalesce.GlobalConfiguration.viewModel.setupValidationAutomatically(false);
        }
        var objectChangePropertyList = new ListViewModels.ObjectChangePropertyList();
        
        // Set up parent info based on the URL.
        @if (ViewBag.Query != null)
        {
            @:objectChangePropertyList.queryString = "@(ViewBag.Query)";
        }
        
        // Save and restore values from the URL:
        var urlVariables = ['page', 'pageSize', 'search', 'orderBy', 'orderByDescending'];
        $.each(urlVariables, function(){
            var param = Coalesce.Utilities.GetUrlParameter(this);
            if (param) {objectChangePropertyList[this](param);}
        })
        objectChangePropertyList.isLoading.subscribe(function(){
            var newUrl = window.location.href;
        
            $.each(urlVariables, function(){
                var param = objectChangePropertyList[this]();
                newUrl = Coalesce.Utilities.SetUrlParameter(newUrl, this, param);
            })
            history.replaceState(null, document.title, newUrl);
        });
        
        objectChangePropertyList.isSavingAutomatically = false;
        ko.applyBindings(objectChangePropertyList, document.body);
        objectChangePropertyList.isSavingAutomatically = true;
        
        objectChangePropertyList.includes = "ObjectChangePropertyListGen";
        objectChangePropertyList.load();
    </script>
}
