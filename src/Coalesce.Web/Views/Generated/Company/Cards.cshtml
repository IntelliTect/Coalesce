@using IntelliTect.Coalesce.Knockout.Helpers
@{ ViewBag.Fluid = true; }

<style>
    .card-view-header {
        padding: 10px 15px;
    }
</style>

<div class="card-view obj-company">
    <div class="card-view-header">
        <div class="clearfix">
            <h1 style="display: inline-block">
                Company List
                    <span style="font-size: .5em; padding-left: 20px;"><a href="~/Company/Docs">API Docs</a></span>
            </h1>
            <span class="label label-info" data-bind="fadeVisible: isLoading()">Loading...</span>
        </div>

        <div class="clearfix">
            <div style="display: inline-block; font-size: 1.1em; margin-right: 10px;">
                <i class="fa fa-arrow-circle-left" data-bind="enabled: previousPageEnabled(), click: previousPage"></i>
                Page
                <input data-bind="value: page" style="width: 35px">
                of
                <span data-bind="text: pageCount"></span>
                <i class="fa fa-arrow-circle-right" data-bind="enabled: nextPageEnabled(), click: nextPage"></i>
            </div>
            <select data-bind="value:pageSize" class="form-control" style="width: 100px; display: inline-block">
                <option value="1">1</option>
                <option value="5">5</option>
                <option value="10">10</option>
                <option value="50">50</option>
                <option value="100">100</option>
                <option value="500">500</option>
                <option value="1000">1000</option>
            </select>

            <input class="form-control pull-right" style="width: 250px; margin-left: 20px" data-bind="textInput: search" placeholder="Search" />

            <div class="btn-group pull-right">
                    <button data-bind="click:load" class="btn btn-sm btn-default "><i class="fa fa-refresh"></i> Refresh</button>
                    <a href="#" role="button" class="btn btn-sm btn-default " data-bind="attr:{href: downloadAllCsvUrl}"><i class="fa fa-download"></i> CSV</a>
            </div>
        </div>
    </div>
    <hr />


    <div class="flex-card-container card-view-body" data-bind="foreach: items, visible: isLoaded" style="display: none">
        <div class="flex-card ">
                <div class="card-heading">
                    <h3 class="card-title">
                        <span data-bind="text: altName"></span>
                    </h3>
                </div>
            <div class="card-body flex">

                <dl>
                        <dt>Name</dt>
                        <dd>
                            @(Knockout.DisplayFor<Coalesce.Domain.Company>(p => p.Name, false))
                        </dd>
                        <dt>Address1</dt>
                        <dd>
                            @(Knockout.DisplayFor<Coalesce.Domain.Company>(p => p.Address1, false))
                        </dd>
                        <dt>Address2</dt>
                        <dd>
                            @(Knockout.DisplayFor<Coalesce.Domain.Company>(p => p.Address2, false))
                        </dd>
                        <dt>City</dt>
                        <dd>
                            @(Knockout.DisplayFor<Coalesce.Domain.Company>(p => p.City, false))
                        </dd>
                        <dt>State</dt>
                        <dd>
                            @(Knockout.DisplayFor<Coalesce.Domain.Company>(p => p.State, false))
                        </dd>
                        <dt>Zip Code</dt>
                        <dd>
                            @(Knockout.DisplayFor<Coalesce.Domain.Company>(p => p.ZipCode, false))
                        </dd>
                        <dt>Employees</dt>
                        <dd>
                            <a data-bind='attr: {href: employeesListUrl}, text: employees().length + " - Edit"' class='btn btn-default btn-sm'></a>
                        </dd>
                        <dt>Alt Name</dt>
                        <dd>
                            @(Knockout.DisplayFor<Coalesce.Domain.Company>(p => p.AltName, false))
                        </dd>

                </dl>


                <div style="margin-top: auto">
                    <!-- Editor buttons -->
                    <div class="pull-right" role="group">
                                                    <a data-bind="attr:{ href: editUrl }" class="btn btn-sm btn-default">
                                <i class="fa fa-pencil"></i>
                            </a>
                                                    <button data-bind="click: deleteItemWithConfirmation" class="btn btn-sm btn-danger">
                                <i class="fa fa-remove"></i>
                            </button>

                    </div>
                    <span class="form-control-static" data-bind="text: errorMessage"></span>
                </div>

            </div>
        </div>
    </div>
</div>






    @section Scripts
    {

    <script>
        @if (!ViewBag.Editable)
        {
            @:Coalesce.GlobalConfiguration.viewModel.setupValidationAutomatically(false);
        }
        var companyList = new ListViewModels.CompanyList();
        
        // Set up parent info based on the URL.
        @if (ViewBag.Query != null)
        {
            @:companyList.queryString = "@(ViewBag.Query)";
        }

        // Save and restore values from the URL:
        var urlVariables = ['page', 'pageSize', 'search', 'orderBy', 'orderByDescending'];
        $.each(urlVariables, function(){
            var param = Coalesce.Utilities.GetUrlParameter(this);
            if (param) {companyList[this](param);}
        })
        companyList.isLoading.subscribe(function(){
            var newUrl = window.location.href;
            
            $.each(urlVariables, function(){
                var param = companyList[this]();
                newUrl = Coalesce.Utilities.SetUrlParameter(newUrl, this, param);
            })
            history.replaceState(null, document.title, newUrl);
        });

        companyList.isSavingAutomatically = false;
        ko.applyBindings(companyList);
        companyList.isSavingAutomatically = true;

        companyList.includes = "CompanyListGen";
        companyList.load();

    </script>
    }
