<div class="panel panel-default">
    <div class="panel-heading">
        <div class="btn-group pull-right">
            <button onclick="window.history.back()" class="btn btn-sm btn-default">Back</button>
            <button data-bind="click:function() { load(); }" class="btn btn-sm btn-default">Refresh</button>
        </div>
        <h1 class="clearfix" style="display:inline-block;">Person</h1>
        <span class="label label-info" data-bind="fadeVisible: isLoading()">Loading...</span>
    </div>
    <div class="panel-body">
        <div class="form-horizontal">
            <div class="form-group btn-warning" data-bind="if: errorMessage()">
                <label class="col-md-4 control-label">Error</label>
                <div class="col-md-8">
                    <div class="form-control-static" data-bind="text: errorMessage"></div>
                </div>
            </div>
                    <div class="form-group">
                        <label class="col-md-4 control-label">Title</label>
<div class="col-md-8 prop-title">@(Knockout.SelectFor<Coalesce.Domain.Person>(p => p.Title))</div>                    </div>
                    <div class="form-group">
                        <label class="col-md-4 control-label">First Name</label>
<div class="col-md-8 prop-firstName">@(Knockout.InputFor<Coalesce.Domain.Person>(p => p.FirstName))</div>                    </div>
                    <div class="form-group">
                        <label class="col-md-4 control-label">Last Name</label>
<div class="col-md-8 prop-lastName">@(Knockout.InputFor<Coalesce.Domain.Person>(p => p.LastName))</div>                    </div>
                    <div class="form-group">
                        <label class="col-md-4 control-label">Email</label>
<div class="col-md-8 prop-email">@(Knockout.InputFor<Coalesce.Domain.Person>(p => p.Email))</div>                    </div>
                    <div class="form-group">
                        <label class="col-md-4 control-label">Gender</label>
<div class="col-md-8 prop-gender">@(Knockout.SelectFor<Coalesce.Domain.Person>(p => p.Gender))</div>                    </div>
                    <div class="form-group">
                        <label class="col-md-4 control-label">Cases Assigned</label>
<div class="col-md-8 prop-casesAssigned"><a data-bind='attr: {href: casesAssignedListUrl}, text: casesAssigned().length + " - Edit"' class='btn btn-default btn-sm'></a></div>                    </div>
                    <div class="form-group">
                        <label class="col-md-4 control-label">Cases Reported</label>
<div class="col-md-8 prop-casesReported"><a data-bind='attr: {href: casesReportedListUrl}, text: casesReported().length + " - Edit"' class='btn btn-default btn-sm'></a></div>                    </div>
                    <div class="form-group">
                        <label class="col-md-4 control-label">Birth Date</label>
<div class="col-md-8 prop-birthDate">@(Knockout.InputFor<Coalesce.Domain.Person>(p => p.BirthDate))</div>                    </div>
                    <div class="form-group">
                        <label class="col-md-4 control-label">Name</label>
<div class="col-md-8 prop-name">@(Knockout.DisplayFor<Coalesce.Domain.Person>(p => p.Name, false))</div>                    </div>
                    <div class="form-group">
                        <label class="col-md-4 control-label">Company</label>
<div class="col-md-7 prop-company">@(Knockout.SelectForObject<Coalesce.Domain.Person>(p => p.Company))</div>                            <div class="col-md-1" data-bind="with: company">
                                <a data-bind="attr: {href: editUrl}" class="btn btn-default pull-right"><i class="fa fa-ellipsis-h "></i></a>
                            </div>
                    </div>
        </div>
    </div>
    <div class="panel-body">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4>Actions</h4>
                </div>
                <table class="table">
                    <tr>
                        <th style="width:20%;">Action</th>
                        <th style="width:50%;">Result</th>
                        <th style="width:20%;">Successful</th>
                        <th style="width:10%;"></th>
                    </tr>
                        <tr>
                            <td>
                                <button class="btn btn-default btn-xs" data-bind="click: renameModal">Rename</button>
                            </td>
                            <td>
                                <span class="" data-bind="text: renameResult"></span>
                            </td>
                            <td>
                                <span class="" data-bind="text: renameWasSuccessful"></span>
                                <span class="" data-bind="text: renameMessage"></span>
                            </td>
                            <td>
                                <span class="label label-info" data-bind="fadeVisible: renameIsLoading()">Loading</span>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <button class="btn btn-default btn-xs" data-bind="click: changeSpacesToDashesInNameModal">Change Spaces To Dashes In Name</button>
                            </td>
                            <td>
                                <span class="" data-bind="text: changeSpacesToDashesInNameResult"></span>
                            </td>
                            <td>
                                <span class="" data-bind="text: changeSpacesToDashesInNameWasSuccessful"></span>
                                <span class="" data-bind="text: changeSpacesToDashesInNameMessage"></span>
                            </td>
                            <td>
                                <span class="label label-info" data-bind="fadeVisible: changeSpacesToDashesInNameIsLoading()">Loading</span>
                            </td>
                        </tr>
                </table>
            </div>
    </div>
</div>

    <!-- Modal for method: Rename -->
    <div id='method-Rename' class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Rename</h4>
                </div>
                <div class="modal-body form-horizontal">
                        <div class="form-group">
                            <label class="col-md-4 control-label">Addition</label>
                            <div class="col-md-8">
                                <input type="text" class="form-control" data-bind="value: renameArgs.addition">
                            </div>
                        </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary btn-ok">OK</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->

    @section Scripts
    {
    <script>
        var aperson = new ViewModels.Person();
        aperson.includes = "Editor";

        aperson.saveCallbacks.push(function(obj){
            // If there is a new id, set the one for this page
            if (!Coalesce.Utilities.GetUrlParameter('id')){
                if (aperson.myId){
                    var newUrl = Coalesce.Utilities.SetUrlParameter(window.location.href, "id", aperson.myId);
                    window.history.replaceState(null, window.document.title, newUrl);
                }
            }
        });

        @if (ViewBag.Id != null)
                {
                    @:aperson.load('@ViewBag.Id');
                }
        @foreach (var kvp in ViewBag.ParentIds)
                {
                    @:aperson.@(((string)(@kvp.Key)))(@kvp.Value);
                }

        window.onbeforeunload = function(){
            if (aperson.isDirty()) aperson.save();
        }

        aperson.isSavingAutomatically = false;
        aperson.loadChildren(function() {
            ko.applyBindings(aperson);
            aperson.isSavingAutomatically = true;
        });
    </script>
    }
