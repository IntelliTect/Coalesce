@using IntelliTect.Coalesce.Knockout.Helpers
@{ ViewBag.Fluid = true; }

<style>
    td div a {
        display: block;
    }

    th.sortable-header {
        cursor: pointer;
    }

    th.sortable-header:hover {
        background-color: #e6e6e6
    }
    .table-view-header{
        padding: 10px 15px;
    }
</style>

<div class="table-view obj-person">
    <div class="table-view-header">
        <div class="clearfix">
            <h1 style="display: inline-block">
                Person List
                    <span style="font-size: .5em; padding-left: 20px;"><a href="~/Person/Docs">API Docs</a></span>
            </h1>
            <span class="label label-info" data-bind="fadeVisible: isLoading()">Loading...</span>
        </div>

        <div class="clearfix">
            <div style="display: inline-block; font-size: 1.1em; margin-right: 10px;">
                <i class="fa fa-arrow-circle-left" data-bind="enabled: previousPageEnabled() && !isLoading(), click: previousPage"></i>
                Page
                <input data-bind="value: page" style="width: 35px">
                of
                <span data-bind="text: pageCount"></span>
                <i class="fa fa-arrow-circle-right" data-bind="enabled: nextPageEnabled() && !isLoading(), click: nextPage"></i>
            </div>
            <select data-bind="value:pageSize" class="form-control" style="width: 100px; display: inline-block">
                <option value="1">1</option>
                <option value="5">5</option>
                <option value="10">10</option>
                <option value="50">50</option>
                <option value="100">100</option>
                <option value="500">500</option>
                <option value="1000">1000</option>
            </select>

            <input class="form-control pull-right" style="width: 250px; margin-left: 20px" data-bind="textInput: search" placeholder="Search" />

            <div class="btn-group pull-right">
                        <a href="~/Person/CreateEdit?@(ViewBag.Query)" role="button" class="btn btn-sm btn-default "><i class="fa fa-plus"></i> Create</a>
                    <button data-bind="click:load" class="btn btn-sm btn-default "><i class="fa fa-refresh"></i> Refresh</button>
                    @if (ViewBag.Editable)
                    {
                    <a href="~/Person/Table?@(ViewBag.Query)" role="button" class="btn btn-sm btn-default "><i class="fa fa-lock"></i> Make Read-only</a>
                    }
                        else
                        {
                        <a href="~/Person/TableEdit?@ViewBag.Query" role="button" class="btn btn-sm btn-default "><i class="fa fa-pencil"></i> Make Editable</a>
                        }
                    <a href="#" role="button" class="btn btn-sm btn-default " data-bind="attr:{href: downloadAllCsvUrl}"><i class="fa fa-download"></i> CSV</a>
                        <button role="button" class="btn btn-sm btn-default " data-bind="click: csvUploadUi"><i class="fa fa-upload"></i> CSV</button>
            </div>
        </div>
    </div>
    <hr />
    <div class="card table-view-body">
        <div class="card-body">
                <table class="table @(ViewBag.Editable ? " editable" : "" )">
            <thead>
                <tr>
                            <th class="sortable-header" data-bind="click: function(){orderByToggle('Title')}">
                                Title
                                <i class="pull-right fa" data-bind="css:{'fa-caret-up': orderBy() == 'Title', 'fa-caret-down': orderByDescending() == 'Title'}"></i>
                            </th>
                            <th class="sortable-header" data-bind="click: function(){orderByToggle('FirstName')}">
                                First Name
                                <i class="pull-right fa" data-bind="css:{'fa-caret-up': orderBy() == 'FirstName', 'fa-caret-down': orderByDescending() == 'FirstName'}"></i>
                            </th>
                            <th class="sortable-header" data-bind="click: function(){orderByToggle('LastName')}">
                                Last Name
                                <i class="pull-right fa" data-bind="css:{'fa-caret-up': orderBy() == 'LastName', 'fa-caret-down': orderByDescending() == 'LastName'}"></i>
                            </th>
                            <th class="sortable-header" data-bind="click: function(){orderByToggle('Email')}">
                                Email
                                <i class="pull-right fa" data-bind="css:{'fa-caret-up': orderBy() == 'Email', 'fa-caret-down': orderByDescending() == 'Email'}"></i>
                            </th>
                            <th class="sortable-header" data-bind="click: function(){orderByToggle('Gender')}">
                                Gender
                                <i class="pull-right fa" data-bind="css:{'fa-caret-up': orderBy() == 'Gender', 'fa-caret-down': orderByDescending() == 'Gender'}"></i>
                            </th>
                            <th>Cases Assigned</th>
                            <th>Cases Reported</th>
                            <th class="sortable-header" data-bind="click: function(){orderByToggle('BirthDate')}">
                                Birth Date
                                <i class="pull-right fa" data-bind="css:{'fa-caret-up': orderBy() == 'BirthDate', 'fa-caret-down': orderByDescending() == 'BirthDate'}"></i>
                            </th>
                            <th class="sortable-header" data-bind="click: function(){orderByToggle('Name')}">
                                Name
                                <i class="pull-right fa" data-bind="css:{'fa-caret-up': orderBy() == 'Name', 'fa-caret-down': orderByDescending() == 'Name'}"></i>
                            </th>
                            <th class="sortable-header" data-bind="click: function(){orderByToggle('Company')}">
                                Company
                                <i class="pull-right fa" data-bind="css:{'fa-caret-up': orderBy() == 'Company', 'fa-caret-down': orderByDescending() == 'Company'}"></i>
                            </th>
                    <th style="width: 1%">
                    </th>
                </tr>

            </thead>
            <tbody>
                <!-- ko foreach: items -->
                <tr data-bind="css: {'btn-warning': errorMessage()}, attr: {id: personId}">
                        @if (@ViewBag.Editable)
                        {
                            
                            <td class="prop-title">@(Knockout.SelectFor<Coalesce.Domain.Person>(p => p.Title))</td>
                            
                            <td class="prop-firstName">@(Knockout.InputFor<Coalesce.Domain.Person>(p => p.FirstName))</td>
                            
                            <td class="prop-lastName">@(Knockout.InputFor<Coalesce.Domain.Person>(p => p.LastName))</td>
                            
                            <td class="prop-email">@(Knockout.InputFor<Coalesce.Domain.Person>(p => p.Email))</td>
                            
                            <td class="prop-gender">@(Knockout.SelectFor<Coalesce.Domain.Person>(p => p.Gender))</td>
                            
                            <td class="prop-casesAssigned"><a data-bind='attr: {href: casesAssignedListUrl}, text: casesAssigned().length + " - Edit"' class='btn btn-default btn-sm'></a></td>
                            
                            <td class="prop-casesReported"><a data-bind='attr: {href: casesReportedListUrl}, text: casesReported().length + " - Edit"' class='btn btn-default btn-sm'></a></td>
                            
                            <td class="prop-birthDate">@(Knockout.InputFor<Coalesce.Domain.Person>(p => p.BirthDate))</td>
                            
                            <td class="prop-name">@(Knockout.DisplayFor<Coalesce.Domain.Person>(p => p.Name, true))</td>
                            
                            <td class="prop-company">@(Knockout.SelectForObject<Coalesce.Domain.Person>(p => p.Company))</td>
                        }
                        else
                        {
                            
                            <td class="prop-title">@(Knockout.DisplayFor<Coalesce.Domain.Person>(p => p.Title, true))</td>
                            
                            <td class="prop-firstName">@(Knockout.DisplayFor<Coalesce.Domain.Person>(p => p.FirstName, true))</td>
                            
                            <td class="prop-lastName">@(Knockout.DisplayFor<Coalesce.Domain.Person>(p => p.LastName, true))</td>
                            
                            <td class="prop-email">@(Knockout.DisplayFor<Coalesce.Domain.Person>(p => p.Email, true))</td>
                            
                            <td class="prop-gender">@(Knockout.DisplayFor<Coalesce.Domain.Person>(p => p.Gender, true))</td>
                            
                            <td class="prop-casesAssigned"><a data-bind='attr: {href: casesAssignedListUrl}, text: casesAssigned().length + " - Edit"' class='btn btn-default btn-sm'></a></td>
                            
                            <td class="prop-casesReported"><a data-bind='attr: {href: casesReportedListUrl}, text: casesReported().length + " - Edit"' class='btn btn-default btn-sm'></a></td>
                            
                            <td class="prop-birthDate">@(Knockout.DisplayFor<Coalesce.Domain.Person>(p => p.BirthDate, true))</td>
                            
                            <td class="prop-name">@(Knockout.DisplayFor<Coalesce.Domain.Person>(p => p.Name, true))</td>
                            
                            <td class="prop-company">@(Knockout.DisplayFor<Coalesce.Domain.Person>(p => p.Company, true))</td>
                        }
                    <td>

                        <!-- Editor buttons -->
                        <div class="btn-group pull-right" role="group" style="display: inline-flex">
                                <!-- Action buttons -->
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-sm btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        Actions <span class="caret"></span>
                                    </button>
                                    <ul class="dropdown-menu">
                                            <li><a href="#" data-bind = 'click: renameUi'>Rename</a></li>
                                            <li><a href="#" data-bind = 'click: changeSpacesToDashesInNameUi'>Change Spaces To Dashes In Name</a></li>
                                            <li><a href="#" data-bind = 'click: fullNameAndAgeUi'>Full Name And Age</a></li>
                                            <li><a href="#" data-bind = 'click: obfuscateEmailUi'>Obfuscate Email</a></li>
                                    </ul>
                                </div>
                                                            <a data-bind="attr:{ href: editUrl }" class="btn btn-sm btn-default">
                                    <i class="fa fa-pencil"></i>
                                </a>
                                                            <button data-bind="click: deleteItemWithConfirmation" class="btn btn-sm btn-danger">
                                    <i class="fa fa-remove"></i>
                                </button>

                        </div>
                        <div class="form-control-static" data-bind="text: errorMessage"></div>
                    </td>
                </tr>
                <!-- /ko -->
            </tbody>
        </table>
    </div>
</div>
</div>


    <div class="card">
        <div class="card-heading">
            <h3 class="card-title">Actions</h3>
        </div>
        <div class="card-body">
            <table class="table">
                <thead>
                    <tr>
                        <th style="width: 20%;">Action</th>
                        <th style="width: 50%;">Result</th>
                        <th style="width: 20%;">Successful</th>
                        <th style="width: 10%;"></th>
                    </tr>
                </thead>
                <tbody>
                        <tr>
                            <td>
                                <button class="btn btn-default btn-xs" data-bind="click: addModal">Add</button>
                            </td>
                            <td>
                                    <span class="" data-bind="text: addResult"></span>
                            </td>
                            <td>
                                <span class="" data-bind="text: addWasSuccessful"></span>
                                <span class="" data-bind="text: addMessage"></span>
                            </td>
                            <td>
                                <span class="label label-info" data-bind="fadeVisible: addIsLoading()">Loading</span>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <button class="btn btn-default btn-xs" data-bind="click: getUserModal">Get User</button>
                            </td>
                            <td>
                                    <span class="" data-bind="text: getUserResult"></span>
                            </td>
                            <td>
                                <span class="" data-bind="text: getUserWasSuccessful"></span>
                                <span class="" data-bind="text: getUserMessage"></span>
                            </td>
                            <td>
                                <span class="label label-info" data-bind="fadeVisible: getUserIsLoading()">Loading</span>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <button class="btn btn-default btn-xs" data-bind="click: personCountModal">Person Count</button>
                            </td>
                            <td>
                                    <span class="" data-bind="text: personCountResult"></span>
                            </td>
                            <td>
                                <span class="" data-bind="text: personCountWasSuccessful"></span>
                                <span class="" data-bind="text: personCountMessage"></span>
                            </td>
                            <td>
                                <span class="label label-info" data-bind="fadeVisible: personCountIsLoading()">Loading</span>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <button class="btn btn-default btn-xs" data-bind="click: removePersonByIdModal">Remove Person By Id</button>
                            </td>
                            <td>
                                    <span class="" data-bind="text: removePersonByIdResult"></span>
                            </td>
                            <td>
                                <span class="" data-bind="text: removePersonByIdWasSuccessful"></span>
                                <span class="" data-bind="text: removePersonByIdMessage"></span>
                            </td>
                            <td>
                                <span class="label label-info" data-bind="fadeVisible: removePersonByIdIsLoading()">Loading</span>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <button class="btn btn-default btn-xs" data-bind="click: getUserPublicModal">Get User Public</button>
                            </td>
                            <td>
                                    <span class="" data-bind="text: getUserPublicResult"></span>
                            </td>
                            <td>
                                <span class="" data-bind="text: getUserPublicWasSuccessful"></span>
                                <span class="" data-bind="text: getUserPublicMessage"></span>
                            </td>
                            <td>
                                <span class="label label-info" data-bind="fadeVisible: getUserPublicIsLoading()">Loading</span>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <button class="btn btn-default btn-xs" data-bind="click: namesStartingWithModal">Names Starting With</button>
                            </td>
                            <td>
                                    <ul data-bind="foreach: namesStartingWithResult">
                                        <li class="" data-bind="text: $data"></li>
                                    </ul>
                            </td>
                            <td>
                                <span class="" data-bind="text: namesStartingWithWasSuccessful"></span>
                                <span class="" data-bind="text: namesStartingWithMessage"></span>
                            </td>
                            <td>
                                <span class="label label-info" data-bind="fadeVisible: namesStartingWithIsLoading()">Loading</span>
                            </td>
                        </tr>
                </tbody>
            </table>
        </div>
    </div>


    <!-- Modal for method: Add -->
    <div id='method-Add' class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Add</h4>
                </div>
                <div class="modal-body form-horizontal" data-bind="with: addArgs">
                        <div class="form-group">
                            <label class="col-md-4 control-label">Number One</label>
                            <div class="col-md-8">
                                <input type="text" class="form-control" data-bind="value: numberOne">
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-4 control-label">Number Two</label>
                            <div class="col-md-8">
                                <input type="text" class="form-control" data-bind="value: numberTwo">
                            </div>
                        </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary btn-ok">OK</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
    <!-- Modal for method: PersonCount -->
    <div id='method-PersonCount' class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Person Count</h4>
                </div>
                <div class="modal-body form-horizontal" data-bind="with: personCountArgs">
                        <div class="form-group">
                            <label class="col-md-4 control-label">Last Name Starts With</label>
                            <div class="col-md-8">
                                <input type="text" class="form-control" data-bind="value: lastNameStartsWith">
                            </div>
                        </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary btn-ok">OK</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
    <!-- Modal for method: RemovePersonById -->
    <div id='method-RemovePersonById' class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Remove Person By Id</h4>
                </div>
                <div class="modal-body form-horizontal" data-bind="with: removePersonByIdArgs">
                        <div class="form-group">
                            <label class="col-md-4 control-label">Id</label>
                            <div class="col-md-8">
                                <input type="text" class="form-control" data-bind="value: id">
                            </div>
                        </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary btn-ok">OK</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
    <!-- Modal for method: NamesStartingWith -->
    <div id='method-NamesStartingWith' class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Names Starting With</h4>
                </div>
                <div class="modal-body form-horizontal" data-bind="with: namesStartingWithArgs">
                        <div class="form-group">
                            <label class="col-md-4 control-label">Characters</label>
                            <div class="col-md-8">
                                <input type="text" class="form-control" data-bind="value: characters">
                            </div>
                        </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary btn-ok">OK</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->

    @section Scripts
    {

    <script>
        @if (!ViewBag.Editable)
        {
            @:Coalesce.GlobalConfiguration.viewModel.setupValidationAutomatically(false);
        }
        var personList = new ListViewModels.PersonList();
        
        // Set up parent info based on the URL.
        @if (ViewBag.Query != null)
        {
            @:personList.queryString = "@(ViewBag.Query)";
        }

        // Save and restore values from the URL:
        var urlVariables = ['page', 'pageSize', 'search', 'orderBy', 'orderByDescending'];
        $.each(urlVariables, function(){
            var param = Coalesce.Utilities.GetUrlParameter(this);
            if (param) {personList[this](param);}
        })
        personList.isLoading.subscribe(function(){
            var newUrl = window.location.href;
            
            $.each(urlVariables, function(){
                var param = personList[this]();
                newUrl = Coalesce.Utilities.SetUrlParameter(newUrl, this, param);
            })
            history.replaceState(null, document.title, newUrl);
        });

        personList.isSavingAutomatically = false;
        ko.applyBindings(personList);
        personList.isSavingAutomatically = true;

        personList.includes = "PersonListGen";
        personList.load();

    </script>
    }
