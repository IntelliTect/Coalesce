using IntelliTect.Coalesce.CodeGeneration.Generation;
using IntelliTect.Coalesce.TypeDefinition;
using IntelliTect.Coalesce.Utilities;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace IntelliTect.Coalesce.CodeGeneration.Knockout.BaseGenerators
{
    public abstract class KnockoutTsGenerator : StringBuilderFileGenerator<ClassViewModel>
    {
        public KnockoutTsGenerator(GeneratorServices services) : base(services) {
            Services = services;
        }

        public GeneratorServices Services { get; }
        public GenerationContext GenerationContext => Services.GenerationContext;
        public string AreaName => GenerationContext.AreaName;
        public string ModulePrefix => GenerationContext.TypescriptModulePrefix;

        protected bool ShouldWriteGeneratedBy { get; set; } = true;

        public override Task<string> BuildOutputAsync()
        {
            var b = new TypeScriptCodeBuilder();
            
            b.Line();
            b.Line("/// <reference path=\"../coalesce.dependencies.d.ts\" />");

            if (ShouldWriteGeneratedBy)
            {
                b.Line();
                b.Line("// Generated by IntelliTect.Coalesce");
            }

            b.Line();

            BuildOutput(b);
            return Task.FromResult(b.ToString());
        }

        public abstract void BuildOutput(TypeScriptCodeBuilder b);

    }
}
