using System;
using System.Linq;
using System.Collections.Generic;
using System.Dynamic;
using IntelliTect.Coalesce.Utilities;
// <auto-generated/>
namespace Razor
{
#line hidden
    using IntelliTect.Coalesce.CodeGeneration.Templating.Razor;
    using IntelliTect.Coalesce.CodeGeneration.Knockout.Generators;
    using IntelliTect.Coalesce.TypeDefinition;
    public class ViewControllerTemplate : CoalesceTemplate<ViewController>
    {
#pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            var b = new CodeBuilder();
            ClassViewModel model = Model.Model;
            string namespaceName = Model.Namespace;
            string viewLocation = "~/Views";
            if (!string.IsNullOrWhiteSpace(Model.AreaName))
            {
                namespaceName += "." + Model.AreaName;
                viewLocation = "~/Areas/" + Model.AreaName + "/Views";
            }
            b.Line("using IntelliTect.Coalesce.Knockout.Controllers;");
            b.Line("using Microsoft.AspNetCore.Authorization;");
            b.Line("using Microsoft.AspNetCore.Mvc;");
            b.Line("using Microsoft.AspNetCore.Hosting;");
            b.Line();
            b.Line($"namespace {namespaceName}.Controllers");
            b.Line("{");
            if (!string.IsNullOrWhiteSpace(Model.AreaName))
            {
                b.Line($"    [Area(\"{Model.AreaName}\")]");
            }
            b.Line($"    {model.SecurityInfo.ClassAnnotation}");
            b.Line($"    public partial class {model.ViewControllerClassName}: BaseViewController<{model.FullyQualifiedName}>");
            b.Line("    { ");
            b.Line($"        {model.SecurityInfo.ReadAnnotation}");
            b.Line("        public ActionResult Cards(){");
            b.Line($"            return IndexImplementation(false, @\"{viewLocation}/Generated/{model.Name}/Cards.cshtml\");");
            b.Line("        }");
            b.Line();
            b.Line($"        {model.SecurityInfo.ReadAnnotation}");
            b.Line("        public ActionResult Table(){");
            b.Line($"            return IndexImplementation(false, @\"{viewLocation}/Generated/{model.Name}/Table.cshtml\");");
            b.Line("        }");
            b.Line();
            if (model.SecurityInfo.IsEditAllowed())
            {
                b.Line();
                b.Line($"        {model.SecurityInfo.EditAnnotation}");
                b.Line("        public ActionResult TableEdit(){");
                b.Line($"            return IndexImplementation(true, @\"{viewLocation}/Generated/{model.Name}/Table.cshtml\");");
                b.Line("        }");
                b.Line();
                b.Line($"        {model.SecurityInfo.EditAnnotation}");
                b.Line("        public ActionResult CreateEdit(){");
                b.Line($"            return CreateEditImplementation(@\"{viewLocation}/Generated/{model.Name}/CreateEdit.cshtml\");");
                b.Line("        }");
                b.Line("                      ");
                b.Line($"        {model.SecurityInfo.EditAnnotation}");
                b.Line("        public ActionResult EditorHtml(bool simple = false)");
                b.Line("        {");
                b.Line("            return EditorHtmlImplementation(simple);");
                b.Line("        }");
                b.Line();
                b.Line($"        {model.SecurityInfo.EditAnnotation}");
                b.Line("        public ActionResult Docs([FromServices] IHostingEnvironment hostingEnvironment)");
                b.Line("        {");
                b.Line("            return DocsImplementation(hostingEnvironment);");
                b.Line("        }    ");
                Write($"        ");
            }
            b.Line("    }");
            Write($"}}");
        }
#pragma warning restore 1998
    }
}