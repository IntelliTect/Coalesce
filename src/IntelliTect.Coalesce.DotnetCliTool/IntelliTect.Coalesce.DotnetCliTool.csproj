<Project>
  
  <!-- Technique for overriding SDK targets from https://stackoverflow.com/a/47619786/2465631 -->
  <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" />
  
  <Import Project="../Cli.Common.props" />
  
  <!-- 
    This builds the legacy-style DotNetCliToolReference version of the coalesce CLI.
  -->
  
  <PropertyGroup>
    <TargetFrameworks>netcoreapp2.1;net6.0;net7.0</TargetFrameworks>

    <!--    
	    Suppress warnings about 2.1 being abandoned. 
	    This was the last version to officially support DotNetCliToolReference,
		so we keep building for this target framework because it doesn't require
		hacky workarounds (<DotnetCliToolTargetFramework>) in the consuming project.
	-->
	<CheckEolTargetFramework Condition=" '$(TargetFramework)' == 'netcoreapp2.1' ">false</CheckEolTargetFramework>
	  
    <PlatformTarget>AnyCPU</PlatformTarget>

    <AssemblyName>dotnet-coalesce</AssemblyName>
    <PackageId>IntelliTect.Coalesce.Tools</PackageId>
    <PackageType>DotnetCliTool</PackageType>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="../IntelliTect.Coalesce.DotnetTool/*.cs" />
  </ItemGroup>
  
  <!-- 
    Because Microsoft ignored all feedback on why this format was still useful
    (donet/sdk issue #3115), we'll hack around their arbitrary limitation
    so we can keep building against newer frameworks.
  -->
  <!-- Technique for overriding SDK targets from https://stackoverflow.com/a/47619786/2465631 -->
  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />
  <Target Name="_PackProjectToolValidation">
     <!-- 
      This is the target in the .NET SDK that performs this validation. 
      Blank it out.
     -->
  </Target>
</Project>