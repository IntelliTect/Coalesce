name: Build, Test, and Deploy Coalesce.Starter.Vue

# https://docs.github.com/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

# CONFIGURATION
# For help, go to https://github.com/Azure/Actions
#
# 1. Set up the production Environment in the GitHub Repository Settings.
#   Environment Protection Rules are recommended to prevent accidental deployments.
#   https://docs.github.com/actions/managing-workflow-runs-and-deployments/managing-deployments/managing-environments-for-deployment#deployment-protection-rules
#
# 2. Set up the following secrets in your repository - https://docs.github.com/actions/security-for-github-actions/security-guides/using-secrets-in-github-actions#creating-secrets-for-an-environment
#   AZURE_WEBAPP_PUBLISH_PROFILE
#
# 3. Change these variables for your configuration:
env:
  AZURE_WEBAPP_NAME: MY_WEBAPP_NAME # set this to your app service name

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
        with:
          lfs: true

      - name: Use .NET SDK
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: 9.x
          dotnet-quality: preview

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      - name: npm ci
        run: npm ci
        working-directory: Coalesce.Starter.Vue.Web

      - name: Restore Nuget packages
        run: dotnet restore

      - name: Check Coalesce has been run
        run: dotnet coalesce --what-if --verify
        working-directory: Coalesce.Starter.Vue.Web

      - name: npm run lint
        run: npm run lint
        working-directory: Coalesce.Starter.Vue.Web

      - name: npm run build
        run: npm run build
        working-directory: Coalesce.Starter.Vue.Web

      - name: dotnet build
        run: dotnet build --configuration Release --no-restore --no-incremental

      - name: dotnet test
        run: dotnet test --configuration Release --no-restore --no-build

      - name: dotnet publish
        run: dotnet publish ${{ github.workspace }}/Coalesce.Starter.Vue.Web/Coalesce.Starter.Vue.Web.csproj --configuration Release --output ${{ github.workspace }}/publish --no-restore --no-build

      - name: Upload artifact for deployment
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: web-app
          path: ${{ github.workspace }}/publish
          if-no-files-found: error

  # Deploys the app to Azure App Service
  # https://docs.github.com/actions/use-cases-and-examples/deploying/deploying-net-to-azure-app-service
  deploy-production:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    environment:
      name: "production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact for deployment
        uses: actions/download-artifact@v5
        with:
          name: web-app

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: "production"
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: .
